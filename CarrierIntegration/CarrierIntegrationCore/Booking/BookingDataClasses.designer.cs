#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarrierIntegrationCore.Booking
{
    using System.Reflection;
    using System.ComponentModel;
    using System;
    using System.Data.Linq.Mapping;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ABCLogisticsShippingDB_Target")]
	public partial class BookingDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBookingCarrier(BookingCarrier instance);
    partial void UpdateBookingCarrier(BookingCarrier instance);
    partial void DeleteBookingCarrier(BookingCarrier instance);
    partial void InsertBookingCondition(BookingCondition instance);
    partial void UpdateBookingCondition(BookingCondition instance);
    partial void DeleteBookingCondition(BookingCondition instance);
    partial void InsertRatesACI(RatesACI instance);
    partial void UpdateRatesACI(RatesACI instance);
    partial void DeleteRatesACI(RatesACI instance);
    partial void InsertBookingRateState(BookingRateState instance);
    partial void UpdateBookingRateState(BookingRateState instance);
    partial void DeleteBookingRateState(BookingRateState instance);
    partial void InsertBookingRateTariff(BookingRateTariff instance);
    partial void UpdateBookingRateTariff(BookingRateTariff instance);
    partial void DeleteBookingRateTariff(BookingRateTariff instance);
    partial void InsertBookingRateZoneMat(BookingRateZoneMat instance);
    partial void UpdateBookingRateZoneMat(BookingRateZoneMat instance);
    partial void DeleteBookingRateZoneMat(BookingRateZoneMat instance);
    partial void InsertBookingCustomerAccessorial(BookingCustomerAccessorial instance);
    partial void UpdateBookingCustomerAccessorial(BookingCustomerAccessorial instance);
    partial void DeleteBookingCustomerAccessorial(BookingCustomerAccessorial instance);
    partial void InsertBookingRateRequest(BookingRateRequest instance);
    partial void UpdateBookingRateRequest(BookingRateRequest instance);
    partial void DeleteBookingRateRequest(BookingRateRequest instance);
    partial void InsertBookingAccessorial(BookingAccessorial instance);
    partial void UpdateBookingAccessorial(BookingAccessorial instance);
    partial void DeleteBookingAccessorial(BookingAccessorial instance);
    partial void InsertBookingRateBeyond(BookingRateBeyond instance);
    partial void UpdateBookingRateBeyond(BookingRateBeyond instance);
    partial void DeleteBookingRateBeyond(BookingRateBeyond instance);
    partial void InsertBookingCountry(BookingCountry instance);
    partial void UpdateBookingCountry(BookingCountry instance);
    partial void DeleteBookingCountry(BookingCountry instance);
    partial void InsertBookingBookRequest(BookingBookRequest instance);
    partial void UpdateBookingBookRequest(BookingBookRequest instance);
    partial void DeleteBookingBookRequest(BookingBookRequest instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertFreight(Freight instance);
    partial void UpdateFreight(Freight instance);
    partial void DeleteFreight(Freight instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertConsignee(Consignee instance);
    partial void UpdateConsignee(Consignee instance);
    partial void DeleteConsignee(Consignee instance);
    partial void InsertSBAShipper(SBAShipper instance);
    partial void UpdateSBAShipper(SBAShipper instance);
    partial void DeleteSBAShipper(SBAShipper instance);
    partial void InsertSBAAddress(SBAAddress instance);
    partial void UpdateSBAAddress(SBAAddress instance);
    partial void DeleteSBAAddress(SBAAddress instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertBillTo(BillTo instance);
    partial void UpdateBillTo(BillTo instance);
    partial void DeleteBillTo(BillTo instance);
    partial void InsertOrdersQueue(OrdersQueue instance);
    partial void UpdateOrdersQueue(OrdersQueue instance);
    partial void DeleteOrdersQueue(OrdersQueue instance);
    partial void InsertBookingCustomer(BookingCustomer instance);
    partial void UpdateBookingCustomer(BookingCustomer instance);
    partial void DeleteBookingCustomer(BookingCustomer instance);
    partial void InsertBookingService(BookingService instance);
    partial void UpdateBookingService(BookingService instance);
    partial void DeleteBookingService(BookingService instance);
    #endregion
		
		public BookingDataClassesDataContext() : 
				base(global::CarrierIntegrationCore.Properties.Settings.Default.ABCLogisticsShippingDB_TargetConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BookingDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookingDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookingDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BookingDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BookingCarrier> BookingCarriers
		{
			get
			{
				return this.GetTable<BookingCarrier>();
			}
		}
		
		public System.Data.Linq.Table<BookingCondition> BookingConditions
		{
			get
			{
				return this.GetTable<BookingCondition>();
			}
		}
		
		public System.Data.Linq.Table<RatesACI> RatesACIs
		{
			get
			{
				return this.GetTable<RatesACI>();
			}
		}
		
		public System.Data.Linq.Table<BookingRateState> BookingRateStates
		{
			get
			{
				return this.GetTable<BookingRateState>();
			}
		}
		
		public System.Data.Linq.Table<BookingRateTariff> BookingRateTariffs
		{
			get
			{
				return this.GetTable<BookingRateTariff>();
			}
		}
		
		public System.Data.Linq.Table<BookingRateZoneMat> BookingRateZoneMats
		{
			get
			{
				return this.GetTable<BookingRateZoneMat>();
			}
		}
		
		public System.Data.Linq.Table<BookingCustomerAccessorial> BookingCustomerAccessorials
		{
			get
			{
				return this.GetTable<BookingCustomerAccessorial>();
			}
		}
		
		public System.Data.Linq.Table<BookingRateRequest> BookingRateRequests
		{
			get
			{
				return this.GetTable<BookingRateRequest>();
			}
		}
		
		public System.Data.Linq.Table<BookingAccessorial> BookingAccessorials
		{
			get
			{
				return this.GetTable<BookingAccessorial>();
			}
		}
		
		public System.Data.Linq.Table<BookingRateBeyond> BookingRateBeyonds
		{
			get
			{
				return this.GetTable<BookingRateBeyond>();
			}
		}
		
		public System.Data.Linq.Table<BookingCountry> BookingCountries
		{
			get
			{
				return this.GetTable<BookingCountry>();
			}
		}
		
		public System.Data.Linq.Table<BookingBookRequest> BookingBookRequests
		{
			get
			{
				return this.GetTable<BookingBookRequest>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Freight> Freights
		{
			get
			{
				return this.GetTable<Freight>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<Consignee> Consignees
		{
			get
			{
				return this.GetTable<Consignee>();
			}
		}
		
		public System.Data.Linq.Table<SBAShipper> SBAShippers
		{
			get
			{
				return this.GetTable<SBAShipper>();
			}
		}
		
		public System.Data.Linq.Table<SBAAddress> SBAAddresses
		{
			get
			{
				return this.GetTable<SBAAddress>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<BillTo> BillTos
		{
			get
			{
				return this.GetTable<BillTo>();
			}
		}
		
		public System.Data.Linq.Table<OrdersQueue> OrdersQueues
		{
			get
			{
				return this.GetTable<OrdersQueue>();
			}
		}
		
		public System.Data.Linq.Table<BookingCustomer> BookingCustomers
		{
			get
			{
				return this.GetTable<BookingCustomer>();
			}
		}
		
		public System.Data.Linq.Table<BookingService> BookingServices
		{
			get
			{
				return this.GetTable<BookingService>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNextHawb")]
		public ISingleResult<GetNextHawbResult> GetNextHawb([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> serviceId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceId);
			return ((ISingleResult<GetNextHawbResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingCarriers")]
	public partial class BookingCarrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarrierID;
		
		private System.Nullable<int> _BookingCustomerID;
		
		private string _CarrierName;
		
		private string _AccountNumber;
		
		private string _AccountName;
		
		private string _Password;
		
		private string _License;
		
		private EntitySet<BookingService> _BookingServices;
		
		private EntityRef<BookingCustomer> _BookingCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarrierIDChanging(int value);
    partial void OnCarrierIDChanged();
    partial void OnBookingCustomerIDChanging(System.Nullable<int> value);
    partial void OnBookingCustomerIDChanged();
    partial void OnCarrierNameChanging(string value);
    partial void OnCarrierNameChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLicenseChanging(string value);
    partial void OnLicenseChanged();
    #endregion
		
		public BookingCarrier()
		{
			this._BookingServices = new EntitySet<BookingService>(new Action<BookingService>(this.attach_BookingServices), new Action<BookingService>(this.detach_BookingServices));
			this._BookingCustomer = default(EntityRef<BookingCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CarrierID
		{
			get
			{
				return this._CarrierID;
			}
			set
			{
				if ((this._CarrierID != value))
				{
					this.OnCarrierIDChanging(value);
					this.SendPropertyChanging();
					this._CarrierID = value;
					this.SendPropertyChanged("CarrierID");
					this.OnCarrierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingCustomerID", DbType="Int")]
		public System.Nullable<int> BookingCustomerID
		{
			get
			{
				return this._BookingCustomerID;
			}
			set
			{
				if ((this._BookingCustomerID != value))
				{
					if (this._BookingCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookingCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._BookingCustomerID = value;
					this.SendPropertyChanged("BookingCustomerID");
					this.OnBookingCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierName", DbType="NVarChar(50)")]
		public string CarrierName
		{
			get
			{
				return this._CarrierName;
			}
			set
			{
				if ((this._CarrierName != value))
				{
					this.OnCarrierNameChanging(value);
					this.SendPropertyChanging();
					this._CarrierName = value;
					this.SendPropertyChanged("CarrierName");
					this.OnCarrierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_License", DbType="NVarChar(50)")]
		public string License
		{
			get
			{
				return this._License;
			}
			set
			{
				if ((this._License != value))
				{
					this.OnLicenseChanging(value);
					this.SendPropertyChanging();
					this._License = value;
					this.SendPropertyChanged("License");
					this.OnLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCarrier_BookingService", Storage="_BookingServices", ThisKey="CarrierID", OtherKey="CarrierID")]
		public EntitySet<BookingService> BookingServices
		{
			get
			{
				return this._BookingServices;
			}
			set
			{
				this._BookingServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingCarrier", Storage="_BookingCustomer", ThisKey="BookingCustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public BookingCustomer BookingCustomer
		{
			get
			{
				return this._BookingCustomer.Entity;
			}
			set
			{
				BookingCustomer previousValue = this._BookingCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BookingCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCustomer.Entity = null;
						previousValue.BookingCarriers.Remove(this);
					}
					this._BookingCustomer.Entity = value;
					if ((value != null))
					{
						value.BookingCarriers.Add(this);
						this._BookingCustomerID = value.CustomerID;
					}
					else
					{
						this._BookingCustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookingCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingServices(BookingService entity)
		{
			this.SendPropertyChanging();
			entity.BookingCarrier = this;
		}
		
		private void detach_BookingServices(BookingService entity)
		{
			this.SendPropertyChanging();
			entity.BookingCarrier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingConditions")]
	public partial class BookingCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingConditionID;
		
		private string _ConditionCode;
		
		private string _ConditionDescription;
		
		private string _OriginCountry;
		
		private string _DestCountry;
		
		private EntitySet<BookingService> _BookingServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingConditionIDChanging(int value);
    partial void OnBookingConditionIDChanged();
    partial void OnConditionCodeChanging(string value);
    partial void OnConditionCodeChanged();
    partial void OnConditionDescriptionChanging(string value);
    partial void OnConditionDescriptionChanged();
    partial void OnOriginCountryChanging(string value);
    partial void OnOriginCountryChanged();
    partial void OnDestCountryChanging(string value);
    partial void OnDestCountryChanged();
    #endregion
		
		public BookingCondition()
		{
			this._BookingServices = new EntitySet<BookingService>(new Action<BookingService>(this.attach_BookingServices), new Action<BookingService>(this.detach_BookingServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingConditionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingConditionID
		{
			get
			{
				return this._BookingConditionID;
			}
			set
			{
				if ((this._BookingConditionID != value))
				{
					this.OnBookingConditionIDChanging(value);
					this.SendPropertyChanging();
					this._BookingConditionID = value;
					this.SendPropertyChanged("BookingConditionID");
					this.OnBookingConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="NVarChar(10)")]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					this.OnConditionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConditionCode = value;
					this.SendPropertyChanged("ConditionCode");
					this.OnConditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionDescription", DbType="NVarChar(200)")]
		public string ConditionDescription
		{
			get
			{
				return this._ConditionDescription;
			}
			set
			{
				if ((this._ConditionDescription != value))
				{
					this.OnConditionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ConditionDescription = value;
					this.SendPropertyChanged("ConditionDescription");
					this.OnConditionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginCountry", DbType="NVarChar(5)")]
		public string OriginCountry
		{
			get
			{
				return this._OriginCountry;
			}
			set
			{
				if ((this._OriginCountry != value))
				{
					this.OnOriginCountryChanging(value);
					this.SendPropertyChanging();
					this._OriginCountry = value;
					this.SendPropertyChanged("OriginCountry");
					this.OnOriginCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestCountry", DbType="NVarChar(5)")]
		public string DestCountry
		{
			get
			{
				return this._DestCountry;
			}
			set
			{
				if ((this._DestCountry != value))
				{
					this.OnDestCountryChanging(value);
					this.SendPropertyChanging();
					this._DestCountry = value;
					this.SendPropertyChanged("DestCountry");
					this.OnDestCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCondition_BookingService", Storage="_BookingServices", ThisKey="BookingConditionID", OtherKey="ConditionID")]
		public EntitySet<BookingService> BookingServices
		{
			get
			{
				return this._BookingServices;
			}
			set
			{
				this._BookingServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingServices(BookingService entity)
		{
			this.SendPropertyChanging();
			entity.BookingCondition = this;
		}
		
		private void detach_BookingServices(BookingService entity)
		{
			this.SendPropertyChanging();
			entity.BookingCondition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rates_ACI")]
	public partial class RatesACI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _state;
		
		private string _point;
		
		private string _zip_begin;
		
		private string _airp_code;
		
		private string _area;
		
		private string _zone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPointChanging(string value);
    partial void OnPointChanged();
    partial void OnZipBeginChanging(string value);
    partial void OnZipBeginChanged();
    partial void OnAirpCodeChanging(string value);
    partial void OnAirpCodeChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnZoneChanging(string value);
    partial void OnZoneChanged();
    #endregion
		
		public RatesACI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="state", Storage="_state", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="point", Storage="_point", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Point
		{
			get
			{
				return this._point;
			}
			set
			{
				if ((this._point != value))
				{
					this.OnPointChanging(value);
					this.SendPropertyChanging();
					this._point = value;
					this.SendPropertyChanged("Point");
					this.OnPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="zip_begin", Storage="_zip_begin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ZipBegin
		{
			get
			{
				return this._zip_begin;
			}
			set
			{
				if ((this._zip_begin != value))
				{
					this.OnZipBeginChanging(value);
					this.SendPropertyChanging();
					this._zip_begin = value;
					this.SendPropertyChanged("ZipBegin");
					this.OnZipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="airp_code", Storage="_airp_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AirpCode
		{
			get
			{
				return this._airp_code;
			}
			set
			{
				if ((this._airp_code != value))
				{
					this.OnAirpCodeChanging(value);
					this.SendPropertyChanging();
					this._airp_code = value;
					this.SendPropertyChanged("AirpCode");
					this.OnAirpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="area", Storage="_area", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="zone", Storage="_zone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Zone
		{
			get
			{
				return this._zone;
			}
			set
			{
				if ((this._zone != value))
				{
					this.OnZoneChanging(value);
					this.SendPropertyChanging();
					this._zone = value;
					this.SendPropertyChanged("Zone");
					this.OnZoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingRateStates")]
	public partial class BookingRateState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StateCode;
		
		private string _Region;
		
		private int _CustomerID;
		
		private EntityRef<BookingCustomer> _BookingCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public BookingRateState()
		{
			this._BookingCustomer = default(EntityRef<BookingCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._BookingCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateState", Storage="_BookingCustomer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public BookingCustomer BookingCustomer
		{
			get
			{
				return this._BookingCustomer.Entity;
			}
			set
			{
				BookingCustomer previousValue = this._BookingCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BookingCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCustomer.Entity = null;
						previousValue.BookingRateStates.Remove(this);
					}
					this._BookingCustomer.Entity = value;
					if ((value != null))
					{
						value.BookingRateStates.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("BookingCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingRateTariffs")]
	public partial class BookingRateTariff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Service;
		
		private decimal _Weight;
		
		private string _Zone;
		
		private decimal _Rate;
		
		private int _CustomerID;
		
		private EntityRef<BookingCustomer> _BookingCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceChanging(string value);
    partial void OnServiceChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnZoneChanging(string value);
    partial void OnZoneChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public BookingRateTariff()
		{
			this._BookingCustomer = default(EntityRef<BookingCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Service
		{
			get
			{
				return this._Service;
			}
			set
			{
				if ((this._Service != value))
				{
					this.OnServiceChanging(value);
					this.SendPropertyChanging();
					this._Service = value;
					this.SendPropertyChanged("Service");
					this.OnServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(10,2) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(5)")]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this.OnZoneChanging(value);
					this.SendPropertyChanging();
					this._Zone = value;
					this.SendPropertyChanged("Zone");
					this.OnZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(10,2) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._BookingCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateTariff", Storage="_BookingCustomer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public BookingCustomer BookingCustomer
		{
			get
			{
				return this._BookingCustomer.Entity;
			}
			set
			{
				BookingCustomer previousValue = this._BookingCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BookingCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCustomer.Entity = null;
						previousValue.BookingRateTariffs.Remove(this);
					}
					this._BookingCustomer.Entity = value;
					if ((value != null))
					{
						value.BookingRateTariffs.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("BookingCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingRateZoneMat")]
	public partial class BookingRateZoneMat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Zone;
		
		private string _Coords;
		
		private int _CustomerID;
		
		private EntityRef<BookingCustomer> _BookingCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnZoneChanging(string value);
    partial void OnZoneChanged();
    partial void OnCoordsChanging(string value);
    partial void OnCoordsChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public BookingRateZoneMat()
		{
			this._BookingCustomer = default(EntityRef<BookingCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(5)")]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this.OnZoneChanging(value);
					this.SendPropertyChanging();
					this._Zone = value;
					this.SendPropertyChanged("Zone");
					this.OnZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coords", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Coords
		{
			get
			{
				return this._Coords;
			}
			set
			{
				if ((this._Coords != value))
				{
					this.OnCoordsChanging(value);
					this.SendPropertyChanging();
					this._Coords = value;
					this.SendPropertyChanged("Coords");
					this.OnCoordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._BookingCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateZoneMat", Storage="_BookingCustomer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public BookingCustomer BookingCustomer
		{
			get
			{
				return this._BookingCustomer.Entity;
			}
			set
			{
				BookingCustomer previousValue = this._BookingCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BookingCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCustomer.Entity = null;
						previousValue.BookingRateZoneMats.Remove(this);
					}
					this._BookingCustomer.Entity = value;
					if ((value != null))
					{
						value.BookingRateZoneMats.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("BookingCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingCustomerAccessorials")]
	public partial class BookingCustomerAccessorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<int> _AccessorialID;
		
		private string _FromRegion;
		
		private string _ToRegion;
		
		private System.Nullable<decimal> _MinRate;
		
		private System.Nullable<decimal> _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnAccessorialIDChanging(System.Nullable<int> value);
    partial void OnAccessorialIDChanged();
    partial void OnFromRegionChanging(string value);
    partial void OnFromRegionChanged();
    partial void OnToRegionChanging(string value);
    partial void OnToRegionChanged();
    partial void OnMinRateChanging(System.Nullable<decimal> value);
    partial void OnMinRateChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    #endregion
		
		public BookingCustomerAccessorial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessorialID", DbType="Int")]
		public System.Nullable<int> AccessorialID
		{
			get
			{
				return this._AccessorialID;
			}
			set
			{
				if ((this._AccessorialID != value))
				{
					this.OnAccessorialIDChanging(value);
					this.SendPropertyChanging();
					this._AccessorialID = value;
					this.SendPropertyChanged("AccessorialID");
					this.OnAccessorialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromRegion", DbType="VarChar(5)")]
		public string FromRegion
		{
			get
			{
				return this._FromRegion;
			}
			set
			{
				if ((this._FromRegion != value))
				{
					this.OnFromRegionChanging(value);
					this.SendPropertyChanging();
					this._FromRegion = value;
					this.SendPropertyChanged("FromRegion");
					this.OnFromRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToRegion", DbType="VarChar(5)")]
		public string ToRegion
		{
			get
			{
				return this._ToRegion;
			}
			set
			{
				if ((this._ToRegion != value))
				{
					this.OnToRegionChanging(value);
					this.SendPropertyChanging();
					this._ToRegion = value;
					this.SendPropertyChanged("ToRegion");
					this.OnToRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(10,3)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingRateRequests")]
	public partial class BookingRateRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestID;
		
		private string _RequestXML;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIDChanging(int value);
    partial void OnRequestIDChanged();
    partial void OnRequestXMLChanging(string value);
    partial void OnRequestXMLChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    #endregion
		
		public BookingRateRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestXML", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RequestXML
		{
			get
			{
				return this._RequestXML;
			}
			set
			{
				if ((this._RequestXML != value))
				{
					this.OnRequestXMLChanging(value);
					this.SendPropertyChanging();
					this._RequestXML = value;
					this.SendPropertyChanged("RequestXML");
					this.OnRequestXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingAccessorials")]
	public partial class BookingAccessorial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServiceName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    #endregion
		
		public BookingAccessorial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="VarChar(100)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingRateBeyond")]
	public partial class BookingRateBeyond : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CustomerID;
		
		private string _FromRegion;
		
		private string _ToRegion;
		
		private System.Nullable<decimal> _MinRate;
		
		private System.Nullable<decimal> _Rate;
		
		private EntityRef<BookingCustomer> _BookingCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnFromRegionChanging(string value);
    partial void OnFromRegionChanged();
    partial void OnToRegionChanging(string value);
    partial void OnToRegionChanged();
    partial void OnMinRateChanging(System.Nullable<decimal> value);
    partial void OnMinRateChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    #endregion
		
		public BookingRateBeyond()
		{
			this._BookingCustomer = default(EntityRef<BookingCustomer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._BookingCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromRegion", DbType="VarChar(5)")]
		public string FromRegion
		{
			get
			{
				return this._FromRegion;
			}
			set
			{
				if ((this._FromRegion != value))
				{
					this.OnFromRegionChanging(value);
					this.SendPropertyChanging();
					this._FromRegion = value;
					this.SendPropertyChanged("FromRegion");
					this.OnFromRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToRegion", DbType="VarChar(5)")]
		public string ToRegion
		{
			get
			{
				return this._ToRegion;
			}
			set
			{
				if ((this._ToRegion != value))
				{
					this.OnToRegionChanging(value);
					this.SendPropertyChanging();
					this._ToRegion = value;
					this.SendPropertyChanged("ToRegion");
					this.OnToRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> MinRate
		{
			get
			{
				return this._MinRate;
			}
			set
			{
				if ((this._MinRate != value))
				{
					this.OnMinRateChanging(value);
					this.SendPropertyChanging();
					this._MinRate = value;
					this.SendPropertyChanged("MinRate");
					this.OnMinRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateBeyond", Storage="_BookingCustomer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public BookingCustomer BookingCustomer
		{
			get
			{
				return this._BookingCustomer.Entity;
			}
			set
			{
				BookingCustomer previousValue = this._BookingCustomer.Entity;
				if (((previousValue != value) 
							|| (this._BookingCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCustomer.Entity = null;
						previousValue.BookingRateBeyonds.Remove(this);
					}
					this._BookingCustomer.Entity = value;
					if ((value != null))
					{
						value.BookingRateBeyonds.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("BookingCustomer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingCountries")]
	public partial class BookingCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _CountryName;
		
		private string _Alpha2Code;
		
		private string _Alpha3Code;
		
		private string _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnAlpha2CodeChanging(string value);
    partial void OnAlpha2CodeChanged();
    partial void OnAlpha3CodeChanging(string value);
    partial void OnAlpha3CodeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    #endregion
		
		public BookingCountry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(50)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alpha2Code", DbType="NVarChar(5)")]
		public string Alpha2Code
		{
			get
			{
				return this._Alpha2Code;
			}
			set
			{
				if ((this._Alpha2Code != value))
				{
					this.OnAlpha2CodeChanging(value);
					this.SendPropertyChanging();
					this._Alpha2Code = value;
					this.SendPropertyChanged("Alpha2Code");
					this.OnAlpha2CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alpha3Code", DbType="NVarChar(5)")]
		public string Alpha3Code
		{
			get
			{
				return this._Alpha3Code;
			}
			set
			{
				if ((this._Alpha3Code != value))
				{
					this.OnAlpha3CodeChanging(value);
					this.SendPropertyChanging();
					this._Alpha3Code = value;
					this.SendPropertyChanged("Alpha3Code");
					this.OnAlpha3CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(5)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingBookRequests")]
	public partial class BookingBookRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookID;
		
		private string _BookXML;
		
		private System.Nullable<System.DateTime> _BookDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(int value);
    partial void OnBookIDChanged();
    partial void OnBookXMLChanging(string value);
    partial void OnBookXMLChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    #endregion
		
		public BookingBookRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookXML", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string BookXML
		{
			get
			{
				return this._BookXML;
			}
			set
			{
				if ((this._BookXML != value))
				{
					this.OnBookXMLChanging(value);
					this.SendPropertyChanging();
					this._BookXML = value;
					this.SendPropertyChanged("BookXML");
					this.OnBookXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private int _UserID;
		
		private string _HblNumber;
		
		private string _OrigAirport;
		
		private string _DestAirport;
		
		private System.Nullable<int> _ServiceID;
		
		private System.Nullable<int> _ShipperID;
		
		private System.Nullable<int> _ConsigneeID;
		
		private System.Nullable<int> _ThirdParty;
		
		private string _ShipperReference;
		
		private System.Nullable<decimal> _DeclaredValue;
		
		private System.Nullable<decimal> _ShipCod;
		
		private System.Nullable<System.DateTime> _ShipDate;
		
		private System.Nullable<System.DateTime> _ReqDelDate;
		
		private string _ReadyTime;
		
		private string _CloseTime;
		
		private string _ShipDescription;
		
		private System.Nullable<bool> _DomOrInt;
		
		private string _Signature;
		
		private System.Nullable<int> _SignatureImgID;
		
		private string _Pod;
		
		private System.Nullable<System.DateTime> _RcvdDate;
		
		private string _RcvdTime;
		
		private string _BillTo;
		
		private string _SpecialInstructions;
		
		private string _InternalReferenceNumber;
		
		private string _EmailStatusNotification;
		
		private string _InternalReferenceNumber2;
		
		private System.Nullable<int> _InternationalOrder;
		
		private System.Nullable<short> _ShipperCODType;
		
		private System.Nullable<decimal> _TotalWeight;
		
		private System.Nullable<int> _TotalPieces;
		
		private System.Nullable<decimal> _TotalCharges;
		
		private string _Station;
		
		private string _StationPhone;
		
		private string _StationPhoneEx;
		
		private System.Nullable<System.DateTime> _Revised;
		
		private bool _TrackAndConfirm;
		
		private bool _IsLTLShipment;
		
		private string _LTLCarrier;
		
		private string _CreditCardAnd3000;
		
		private string _CreditCardNumber;
		
		private bool _ITAR;
		
		private string _Carnet;
		
		private EntitySet<Freight> _Freights;
		
		private EntityRef<User> _User;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<Consignee> _Consignee;
		
		private EntityRef<SBAShipper> _SBAShipper;
		
		private EntityRef<BillTo> _BillTo1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnHblNumberChanging(string value);
    partial void OnHblNumberChanged();
    partial void OnOrigAirportChanging(string value);
    partial void OnOrigAirportChanged();
    partial void OnDestAirportChanging(string value);
    partial void OnDestAirportChanged();
    partial void OnServiceIDChanging(System.Nullable<int> value);
    partial void OnServiceIDChanged();
    partial void OnShipperIDChanging(System.Nullable<int> value);
    partial void OnShipperIDChanged();
    partial void OnConsigneeIDChanging(System.Nullable<int> value);
    partial void OnConsigneeIDChanged();
    partial void OnThirdPartyChanging(System.Nullable<int> value);
    partial void OnThirdPartyChanged();
    partial void OnShipperReferenceChanging(string value);
    partial void OnShipperReferenceChanged();
    partial void OnDeclaredValueChanging(System.Nullable<decimal> value);
    partial void OnDeclaredValueChanged();
    partial void OnShipCodChanging(System.Nullable<decimal> value);
    partial void OnShipCodChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnReqDelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReqDelDateChanged();
    partial void OnReadyTimeChanging(string value);
    partial void OnReadyTimeChanged();
    partial void OnCloseTimeChanging(string value);
    partial void OnCloseTimeChanged();
    partial void OnShipDescriptionChanging(string value);
    partial void OnShipDescriptionChanged();
    partial void OnDomOrIntChanging(System.Nullable<bool> value);
    partial void OnDomOrIntChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnSignatureImgIDChanging(System.Nullable<int> value);
    partial void OnSignatureImgIDChanged();
    partial void OnPodChanging(string value);
    partial void OnPodChanged();
    partial void OnRcvdDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRcvdDateChanged();
    partial void OnRcvdTimeChanging(string value);
    partial void OnRcvdTimeChanged();
    partial void OnBillToChanging(string value);
    partial void OnBillToChanged();
    partial void OnSpecialInstructionsChanging(string value);
    partial void OnSpecialInstructionsChanged();
    partial void OnInternalReferenceNumberChanging(string value);
    partial void OnInternalReferenceNumberChanged();
    partial void OnEmailStatusNotificationChanging(string value);
    partial void OnEmailStatusNotificationChanged();
    partial void OnInternalReferenceNumber2Changing(string value);
    partial void OnInternalReferenceNumber2Changed();
    partial void OnInternationalOrderChanging(System.Nullable<int> value);
    partial void OnInternationalOrderChanged();
    partial void OnShipperCODTypeChanging(System.Nullable<short> value);
    partial void OnShipperCODTypeChanged();
    partial void OnTotalWeightChanging(System.Nullable<decimal> value);
    partial void OnTotalWeightChanged();
    partial void OnTotalPiecesChanging(System.Nullable<int> value);
    partial void OnTotalPiecesChanged();
    partial void OnTotalChargesChanging(System.Nullable<decimal> value);
    partial void OnTotalChargesChanged();
    partial void OnStationChanging(string value);
    partial void OnStationChanged();
    partial void OnStationPhoneChanging(string value);
    partial void OnStationPhoneChanged();
    partial void OnStationPhoneExChanging(string value);
    partial void OnStationPhoneExChanged();
    partial void OnRevisedChanging(System.Nullable<System.DateTime> value);
    partial void OnRevisedChanged();
    partial void OnTrackAndConfirmChanging(bool value);
    partial void OnTrackAndConfirmChanged();
    partial void OnIsLTLShipmentChanging(bool value);
    partial void OnIsLTLShipmentChanged();
    partial void OnLTLCarrierChanging(string value);
    partial void OnLTLCarrierChanged();
    partial void OnCreditCardAnd3000Changing(string value);
    partial void OnCreditCardAnd3000Changed();
    partial void OnCreditCardNumberChanging(string value);
    partial void OnCreditCardNumberChanged();
    partial void OnITARChanging(bool value);
    partial void OnITARChanged();
    partial void OnCarnetChanging(string value);
    partial void OnCarnetChanged();
    #endregion
		
		public Order()
		{
			this._Freights = new EntitySet<Freight>(new Action<Freight>(this.attach_Freights), new Action<Freight>(this.detach_Freights));
			this._User = default(EntityRef<User>);
			this._Service = default(EntityRef<Service>);
			this._Consignee = default(EntityRef<Consignee>);
			this._SBAShipper = default(EntityRef<SBAShipper>);
			this._BillTo1 = default(EntityRef<BillTo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="order_id", Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="user_id", Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hbl_number", Storage="_HblNumber", DbType="VarChar(50)")]
		public string HblNumber
		{
			get
			{
				return this._HblNumber;
			}
			set
			{
				if ((this._HblNumber != value))
				{
					this.OnHblNumberChanging(value);
					this.SendPropertyChanging();
					this._HblNumber = value;
					this.SendPropertyChanged("HblNumber");
					this.OnHblNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="orig_airport", Storage="_OrigAirport", DbType="Char(3)")]
		public string OrigAirport
		{
			get
			{
				return this._OrigAirport;
			}
			set
			{
				if ((this._OrigAirport != value))
				{
					this.OnOrigAirportChanging(value);
					this.SendPropertyChanging();
					this._OrigAirport = value;
					this.SendPropertyChanged("OrigAirport");
					this.OnOrigAirportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dest_airport", Storage="_DestAirport", DbType="Char(3)")]
		public string DestAirport
		{
			get
			{
				return this._DestAirport;
			}
			set
			{
				if ((this._DestAirport != value))
				{
					this.OnDestAirportChanging(value);
					this.SendPropertyChanging();
					this._DestAirport = value;
					this.SendPropertyChanged("DestAirport");
					this.OnDestAirportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="service_id", Storage="_ServiceID", DbType="Int")]
		public System.Nullable<int> ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shipper_id", Storage="_ShipperID", DbType="Int")]
		public System.Nullable<int> ShipperID
		{
			get
			{
				return this._ShipperID;
			}
			set
			{
				if ((this._ShipperID != value))
				{
					this.OnShipperIDChanging(value);
					this.SendPropertyChanging();
					this._ShipperID = value;
					this.SendPropertyChanged("ShipperID");
					this.OnShipperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="consignee_id", Storage="_ConsigneeID", DbType="Int")]
		public System.Nullable<int> ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="third_party", Storage="_ThirdParty", DbType="Int")]
		public System.Nullable<int> ThirdParty
		{
			get
			{
				return this._ThirdParty;
			}
			set
			{
				if ((this._ThirdParty != value))
				{
					this.OnThirdPartyChanging(value);
					this.SendPropertyChanging();
					this._ThirdParty = value;
					this.SendPropertyChanged("ThirdParty");
					this.OnThirdPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shipper_reference", Storage="_ShipperReference", DbType="NVarChar(50)")]
		public string ShipperReference
		{
			get
			{
				return this._ShipperReference;
			}
			set
			{
				if ((this._ShipperReference != value))
				{
					this.OnShipperReferenceChanging(value);
					this.SendPropertyChanging();
					this._ShipperReference = value;
					this.SendPropertyChanged("ShipperReference");
					this.OnShipperReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="declared_value", Storage="_DeclaredValue", DbType="Money")]
		public System.Nullable<decimal> DeclaredValue
		{
			get
			{
				return this._DeclaredValue;
			}
			set
			{
				if ((this._DeclaredValue != value))
				{
					this.OnDeclaredValueChanging(value);
					this.SendPropertyChanging();
					this._DeclaredValue = value;
					this.SendPropertyChanged("DeclaredValue");
					this.OnDeclaredValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ship_cod", Storage="_ShipCod", DbType="Money")]
		public System.Nullable<decimal> ShipCod
		{
			get
			{
				return this._ShipCod;
			}
			set
			{
				if ((this._ShipCod != value))
				{
					this.OnShipCodChanging(value);
					this.SendPropertyChanging();
					this._ShipCod = value;
					this.SendPropertyChanged("ShipCod");
					this.OnShipCodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ship_date", Storage="_ShipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this.OnShipDateChanging(value);
					this.SendPropertyChanging();
					this._ShipDate = value;
					this.SendPropertyChanged("ShipDate");
					this.OnShipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="req_del_date", Storage="_ReqDelDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReqDelDate
		{
			get
			{
				return this._ReqDelDate;
			}
			set
			{
				if ((this._ReqDelDate != value))
				{
					this.OnReqDelDateChanging(value);
					this.SendPropertyChanging();
					this._ReqDelDate = value;
					this.SendPropertyChanged("ReqDelDate");
					this.OnReqDelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ready_time", Storage="_ReadyTime", DbType="NVarChar(50)")]
		public string ReadyTime
		{
			get
			{
				return this._ReadyTime;
			}
			set
			{
				if ((this._ReadyTime != value))
				{
					this.OnReadyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadyTime = value;
					this.SendPropertyChanged("ReadyTime");
					this.OnReadyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="close_time", Storage="_CloseTime", DbType="NVarChar(50)")]
		public string CloseTime
		{
			get
			{
				return this._CloseTime;
			}
			set
			{
				if ((this._CloseTime != value))
				{
					this.OnCloseTimeChanging(value);
					this.SendPropertyChanging();
					this._CloseTime = value;
					this.SendPropertyChanged("CloseTime");
					this.OnCloseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ship_description", Storage="_ShipDescription", DbType="NVarChar(50)")]
		public string ShipDescription
		{
			get
			{
				return this._ShipDescription;
			}
			set
			{
				if ((this._ShipDescription != value))
				{
					this.OnShipDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShipDescription = value;
					this.SendPropertyChanged("ShipDescription");
					this.OnShipDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dom_or_int", Storage="_DomOrInt", DbType="Bit")]
		public System.Nullable<bool> DomOrInt
		{
			get
			{
				return this._DomOrInt;
			}
			set
			{
				if ((this._DomOrInt != value))
				{
					this.OnDomOrIntChanging(value);
					this.SendPropertyChanging();
					this._DomOrInt = value;
					this.SendPropertyChanged("DomOrInt");
					this.OnDomOrIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="signature", Storage="_Signature", DbType="NVarChar(50)")]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="signature_img_id", Storage="_SignatureImgID", DbType="Int")]
		public System.Nullable<int> SignatureImgID
		{
			get
			{
				return this._SignatureImgID;
			}
			set
			{
				if ((this._SignatureImgID != value))
				{
					this.OnSignatureImgIDChanging(value);
					this.SendPropertyChanging();
					this._SignatureImgID = value;
					this.SendPropertyChanged("SignatureImgID");
					this.OnSignatureImgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pod", Storage="_Pod", DbType="NVarChar(200)")]
		public string Pod
		{
			get
			{
				return this._Pod;
			}
			set
			{
				if ((this._Pod != value))
				{
					this.OnPodChanging(value);
					this.SendPropertyChanging();
					this._Pod = value;
					this.SendPropertyChanged("Pod");
					this.OnPodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rcvd_date", Storage="_RcvdDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RcvdDate
		{
			get
			{
				return this._RcvdDate;
			}
			set
			{
				if ((this._RcvdDate != value))
				{
					this.OnRcvdDateChanging(value);
					this.SendPropertyChanging();
					this._RcvdDate = value;
					this.SendPropertyChanged("RcvdDate");
					this.OnRcvdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rcvd_time", Storage="_RcvdTime", DbType="NVarChar(50)")]
		public string RcvdTime
		{
			get
			{
				return this._RcvdTime;
			}
			set
			{
				if ((this._RcvdTime != value))
				{
					this.OnRcvdTimeChanging(value);
					this.SendPropertyChanging();
					this._RcvdTime = value;
					this.SendPropertyChanged("RcvdTime");
					this.OnRcvdTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bill_to", Storage="_BillTo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BillTo
		{
			get
			{
				return this._BillTo;
			}
			set
			{
				if ((this._BillTo != value))
				{
					this.OnBillToChanging(value);
					this.SendPropertyChanging();
					this._BillTo = value;
					this.SendPropertyChanged("BillTo");
					this.OnBillToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="specialInstructions", Storage="_SpecialInstructions", DbType="VarChar(600)")]
		public string SpecialInstructions
		{
			get
			{
				return this._SpecialInstructions;
			}
			set
			{
				if ((this._SpecialInstructions != value))
				{
					this.OnSpecialInstructionsChanging(value);
					this.SendPropertyChanging();
					this._SpecialInstructions = value;
					this.SendPropertyChanged("SpecialInstructions");
					this.OnSpecialInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="internalReferenceNumber", Storage="_InternalReferenceNumber", DbType="NVarChar(80)")]
		public string InternalReferenceNumber
		{
			get
			{
				return this._InternalReferenceNumber;
			}
			set
			{
				if ((this._InternalReferenceNumber != value))
				{
					this.OnInternalReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._InternalReferenceNumber = value;
					this.SendPropertyChanged("InternalReferenceNumber");
					this.OnInternalReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="emailStatusNotification", Storage="_EmailStatusNotification", DbType="VarChar(1000)")]
		public string EmailStatusNotification
		{
			get
			{
				return this._EmailStatusNotification;
			}
			set
			{
				if ((this._EmailStatusNotification != value))
				{
					this.OnEmailStatusNotificationChanging(value);
					this.SendPropertyChanging();
					this._EmailStatusNotification = value;
					this.SendPropertyChanged("EmailStatusNotification");
					this.OnEmailStatusNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="internalReferenceNumber2", Storage="_InternalReferenceNumber2", DbType="NVarChar(80)")]
		public string InternalReferenceNumber2
		{
			get
			{
				return this._InternalReferenceNumber2;
			}
			set
			{
				if ((this._InternalReferenceNumber2 != value))
				{
					this.OnInternalReferenceNumber2Changing(value);
					this.SendPropertyChanging();
					this._InternalReferenceNumber2 = value;
					this.SendPropertyChanged("InternalReferenceNumber2");
					this.OnInternalReferenceNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="internationalOrder", Storage="_InternationalOrder", DbType="Int")]
		public System.Nullable<int> InternationalOrder
		{
			get
			{
				return this._InternationalOrder;
			}
			set
			{
				if ((this._InternationalOrder != value))
				{
					this.OnInternationalOrderChanging(value);
					this.SendPropertyChanging();
					this._InternationalOrder = value;
					this.SendPropertyChanged("InternationalOrder");
					this.OnInternationalOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shipperCODType", Storage="_ShipperCODType", DbType="SmallInt")]
		public System.Nullable<short> ShipperCODType
		{
			get
			{
				return this._ShipperCODType;
			}
			set
			{
				if ((this._ShipperCODType != value))
				{
					this.OnShipperCODTypeChanging(value);
					this.SendPropertyChanging();
					this._ShipperCODType = value;
					this.SendPropertyChanged("ShipperCODType");
					this.OnShipperCODTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="totalWeight", Storage="_TotalWeight", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TotalWeight
		{
			get
			{
				return this._TotalWeight;
			}
			set
			{
				if ((this._TotalWeight != value))
				{
					this.OnTotalWeightChanging(value);
					this.SendPropertyChanging();
					this._TotalWeight = value;
					this.SendPropertyChanged("TotalWeight");
					this.OnTotalWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="totalPieces", Storage="_TotalPieces", DbType="Int")]
		public System.Nullable<int> TotalPieces
		{
			get
			{
				return this._TotalPieces;
			}
			set
			{
				if ((this._TotalPieces != value))
				{
					this.OnTotalPiecesChanging(value);
					this.SendPropertyChanging();
					this._TotalPieces = value;
					this.SendPropertyChanged("TotalPieces");
					this.OnTotalPiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="totalCharges", Storage="_TotalCharges", DbType="Money")]
		public System.Nullable<decimal> TotalCharges
		{
			get
			{
				return this._TotalCharges;
			}
			set
			{
				if ((this._TotalCharges != value))
				{
					this.OnTotalChargesChanging(value);
					this.SendPropertyChanging();
					this._TotalCharges = value;
					this.SendPropertyChanged("TotalCharges");
					this.OnTotalChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="station", Storage="_Station", DbType="NVarChar(50)")]
		public string Station
		{
			get
			{
				return this._Station;
			}
			set
			{
				if ((this._Station != value))
				{
					this.OnStationChanging(value);
					this.SendPropertyChanging();
					this._Station = value;
					this.SendPropertyChanged("Station");
					this.OnStationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stationPhone", Storage="_StationPhone", DbType="NVarChar(50)")]
		public string StationPhone
		{
			get
			{
				return this._StationPhone;
			}
			set
			{
				if ((this._StationPhone != value))
				{
					this.OnStationPhoneChanging(value);
					this.SendPropertyChanging();
					this._StationPhone = value;
					this.SendPropertyChanged("StationPhone");
					this.OnStationPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stationPhoneEx", Storage="_StationPhoneEx", DbType="NVarChar(50)")]
		public string StationPhoneEx
		{
			get
			{
				return this._StationPhoneEx;
			}
			set
			{
				if ((this._StationPhoneEx != value))
				{
					this.OnStationPhoneExChanging(value);
					this.SendPropertyChanging();
					this._StationPhoneEx = value;
					this.SendPropertyChanged("StationPhoneEx");
					this.OnStationPhoneExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="revised", Storage="_Revised", DbType="DateTime")]
		public System.Nullable<System.DateTime> Revised
		{
			get
			{
				return this._Revised;
			}
			set
			{
				if ((this._Revised != value))
				{
					this.OnRevisedChanging(value);
					this.SendPropertyChanging();
					this._Revised = value;
					this.SendPropertyChanged("Revised");
					this.OnRevisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trackAndConfirm", Storage="_TrackAndConfirm", DbType="Bit NOT NULL")]
		public bool TrackAndConfirm
		{
			get
			{
				return this._TrackAndConfirm;
			}
			set
			{
				if ((this._TrackAndConfirm != value))
				{
					this.OnTrackAndConfirmChanging(value);
					this.SendPropertyChanging();
					this._TrackAndConfirm = value;
					this.SendPropertyChanged("TrackAndConfirm");
					this.OnTrackAndConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isLTLShipment", Storage="_IsLTLShipment", DbType="Bit NOT NULL")]
		public bool IsLTLShipment
		{
			get
			{
				return this._IsLTLShipment;
			}
			set
			{
				if ((this._IsLTLShipment != value))
				{
					this.OnIsLTLShipmentChanging(value);
					this.SendPropertyChanging();
					this._IsLTLShipment = value;
					this.SendPropertyChanged("IsLTLShipment");
					this.OnIsLTLShipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LTLCarrier", DbType="VarChar(500)")]
		public string LTLCarrier
		{
			get
			{
				return this._LTLCarrier;
			}
			set
			{
				if ((this._LTLCarrier != value))
				{
					this.OnLTLCarrierChanging(value);
					this.SendPropertyChanging();
					this._LTLCarrier = value;
					this.SendPropertyChanged("LTLCarrier");
					this.OnLTLCarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="creditCardAnd3000", Storage="_CreditCardAnd3000", DbType="VarChar(500)")]
		public string CreditCardAnd3000
		{
			get
			{
				return this._CreditCardAnd3000;
			}
			set
			{
				if ((this._CreditCardAnd3000 != value))
				{
					this.OnCreditCardAnd3000Changing(value);
					this.SendPropertyChanging();
					this._CreditCardAnd3000 = value;
					this.SendPropertyChanged("CreditCardAnd3000");
					this.OnCreditCardAnd3000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="creditCardNumber", Storage="_CreditCardNumber", DbType="VarChar(500)")]
		public string CreditCardNumber
		{
			get
			{
				return this._CreditCardNumber;
			}
			set
			{
				if ((this._CreditCardNumber != value))
				{
					this.OnCreditCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CreditCardNumber = value;
					this.SendPropertyChanged("CreditCardNumber");
					this.OnCreditCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITAR", DbType="Bit NOT NULL")]
		public bool ITAR
		{
			get
			{
				return this._ITAR;
			}
			set
			{
				if ((this._ITAR != value))
				{
					this.OnITARChanging(value);
					this.SendPropertyChanging();
					this._ITAR = value;
					this.SendPropertyChanged("ITAR");
					this.OnITARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carnet", DbType="VarChar(50)")]
		public string Carnet
		{
			get
			{
				return this._Carnet;
			}
			set
			{
				if ((this._Carnet != value))
				{
					this.OnCarnetChanging(value);
					this.SendPropertyChanging();
					this._Carnet = value;
					this.SendPropertyChanged("Carnet");
					this.OnCarnetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Freight", Storage="_Freights", ThisKey="OrderID", OtherKey="TransactionID")]
		public EntitySet<Freight> Freights
		{
			get
			{
				return this._Freights;
			}
			set
			{
				this._Freights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Order", Storage="_Service", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignee_Order", Storage="_Consignee", ThisKey="ConsigneeID", OtherKey="ConsigneeID", IsForeignKey=true)]
		public Consignee Consignee
		{
			get
			{
				return this._Consignee.Entity;
			}
			set
			{
				Consignee previousValue = this._Consignee.Entity;
				if (((previousValue != value) 
							|| (this._Consignee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consignee.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Consignee.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ConsigneeID = value.ConsigneeID;
					}
					else
					{
						this._ConsigneeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Consignee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAShipper_Order", Storage="_SBAShipper", ThisKey="ShipperID", OtherKey="ShipperID", IsForeignKey=true)]
		public SBAShipper SBAShipper
		{
			get
			{
				return this._SBAShipper.Entity;
			}
			set
			{
				SBAShipper previousValue = this._SBAShipper.Entity;
				if (((previousValue != value) 
							|| (this._SBAShipper.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SBAShipper.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._SBAShipper.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._ShipperID = value.ShipperID;
					}
					else
					{
						this._ShipperID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SBAShipper");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillTo_Order", Storage="_BillTo1", ThisKey="BillTo", OtherKey="Shortname", IsForeignKey=true)]
		public BillTo BillTo1
		{
			get
			{
				return this._BillTo1.Entity;
			}
			set
			{
				BillTo previousValue = this._BillTo1.Entity;
				if (((previousValue != value) 
							|| (this._BillTo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillTo1.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._BillTo1.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._BillTo = value.Shortname;
					}
					else
					{
						this._BillTo = default(string);
					}
					this.SendPropertyChanged("BillTo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Freights(Freight entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.freight")]
	public partial class Freight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FreightID;
		
		private int _TransactionID;
		
		private int _Qty;
		
		private decimal _Weight;
		
		private decimal _Length;
		
		private decimal _Width;
		
		private decimal _Height;
		
		private string _Description;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFreightIDChanging(int value);
    partial void OnFreightIDChanged();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnLengthChanging(decimal value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(decimal value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(decimal value);
    partial void OnHeightChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Freight()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="freight_id", Storage="_FreightID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FreightID
		{
			get
			{
				return this._FreightID;
			}
			set
			{
				if ((this._FreightID != value))
				{
					this.OnFreightIDChanging(value);
					this.SendPropertyChanging();
					this._FreightID = value;
					this.SendPropertyChanged("FreightID");
					this.OnFreightIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="transaction_id", Storage="_TransactionID", DbType="Int NOT NULL")]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="qty", Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="weight", Storage="_Weight", DbType="Decimal(10,2) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="length", Storage="_Length", DbType="Decimal(10,2) NOT NULL")]
		public decimal Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="width", Storage="_Width", DbType="Decimal(10,2) NOT NULL")]
		public decimal Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="height", Storage="_Height", DbType="Decimal(10,2) NOT NULL")]
		public decimal Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Freight", Storage="_Order", ThisKey="TransactionID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Freights.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Freights.Add(this);
						this._TransactionID = value.OrderID;
					}
					else
					{
						this._TransactionID = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private System.Nullable<int> _RoleID;
		
		private string _Passwd;
		
		private string _Email;
		
		private System.Nullable<int> _Address;
		
		private string _Name;
		
		private string _Company;
		
		private string _Ref_no;
		
		private string _Origin;
		
		private System.Nullable<bool> _Labels;
		
		private string _StationEmail;
		
		private string _StationPhone;
		
		private string _StationPhoneEx;
		
		private string _LabelFormat;
		
		private System.Nullable<bool> _EmailWaybill;
		
		private string _EmailForWaybill;
		
		private string _CustomerNo;
		
		private string _BillToNumber;
		
		private string _BillToName;
		
		private System.Nullable<int> _BillToAddress;
		
		private string _BillToContact;
		
		private System.Nullable<bool> _ShowShipper;
		
		private System.Nullable<int> _DefaultService;
		
		private string _ReadyTime;
		
		private string _CloseTime;
		
		private string _SpecInstr;
		
		private System.Nullable<bool> _EmailStatusUpdates;
		
		private System.Nullable<bool> _RefNumReqired;
		
		private System.Nullable<bool> _QuoteOnly;
		
		private System.Nullable<bool> _DimsRequired;
		
		private int _DimFactorsEconomy;
		
		private int _DimFactorsDom;
		
		private System.Nullable<int> _DimFactorsIntl;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<int> _DefaultSpecialServices;
		
		private System.Nullable<int> _UserDefaultsInfo;
		
		private System.Nullable<int> _ShipperID;
		
		private System.Nullable<bool> _RatesCalculator;
		
		private System.Nullable<bool> _FreightAmount;
		
		private string _DefaultEmail;
		
		private System.Nullable<bool> _CreditCardPayments;
		
		private System.Nullable<bool> _VIewInventory;
		
		private string _Inventory;
		
		private bool _TrackAndConfirmShipper;
		
		private bool _TrackAndConfirmConsignee;
		
		private bool _TrackAndConfirmBillTo;
		
		private int _NumberOfLabels;
		
		private bool _AllowLTL;
		
		private bool _AllowWarehouse;
		
		private bool _AllowReportCharges;
		
		private bool _AirportRates;
		
		private bool _Govt;
		
		private string _CorporateID;
		
		private System.Nullable<bool> _CorporateUser;
		
		private string _CompanyNumber;
		
		private string _EinID;
		
		private string _EmployeeID;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Consignee> _Consignees;
		
		private EntitySet<SBAShipper> _SBAShippers;
		
		private EntityRef<Service> _Service;
		
		private EntityRef<SBAAddress> _address1;
		
		private EntityRef<SBAAddress> _SBAAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRoleIDChanging(System.Nullable<int> value);
    partial void OnRoleIDChanged();
    partial void OnPasswdChanging(string value);
    partial void OnPasswdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(System.Nullable<int> value);
    partial void OnAddressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnLabelsChanging(System.Nullable<bool> value);
    partial void OnLabelsChanged();
    partial void OnStationEmailChanging(string value);
    partial void OnStationEmailChanged();
    partial void OnStationPhoneChanging(string value);
    partial void OnStationPhoneChanged();
    partial void OnStationPhoneExChanging(string value);
    partial void OnStationPhoneExChanged();
    partial void OnLabelFormatChanging(string value);
    partial void OnLabelFormatChanged();
    partial void OnEmailWaybillChanging(System.Nullable<bool> value);
    partial void OnEmailWaybillChanged();
    partial void OnEmailForWaybillChanging(string value);
    partial void OnEmailForWaybillChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnBillToNumberChanging(string value);
    partial void OnBillToNumberChanged();
    partial void OnBillToNameChanging(string value);
    partial void OnBillToNameChanged();
    partial void OnBillToAddressChanging(System.Nullable<int> value);
    partial void OnBillToAddressChanged();
    partial void OnBillToContactChanging(string value);
    partial void OnBillToContactChanged();
    partial void OnShowShipperChanging(System.Nullable<bool> value);
    partial void OnShowShipperChanged();
    partial void OnDefaultServiceChanging(System.Nullable<int> value);
    partial void OnDefaultServiceChanged();
    partial void OnReadyTimeChanging(string value);
    partial void OnReadyTimeChanged();
    partial void OnCloseTimeChanging(string value);
    partial void OnCloseTimeChanged();
    partial void OnSpecInstrChanging(string value);
    partial void OnSpecInstrChanged();
    partial void OnEmailStatusUpdatesChanging(System.Nullable<bool> value);
    partial void OnEmailStatusUpdatesChanged();
    partial void OnRefNumReqiredChanging(System.Nullable<bool> value);
    partial void OnRefNumReqiredChanged();
    partial void OnQuoteOnlyChanging(System.Nullable<bool> value);
    partial void OnQuoteOnlyChanged();
    partial void OnDimsRequiredChanging(System.Nullable<bool> value);
    partial void OnDimsRequiredChanged();
    partial void OnDimFactorsEconomyChanging(int value);
    partial void OnDimFactorsEconomyChanged();
    partial void OnDimFactorsDomChanging(int value);
    partial void OnDimFactorsDomChanged();
    partial void OnDimFactorsIntlChanging(System.Nullable<int> value);
    partial void OnDimFactorsIntlChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnDefaultSpecialServicesChanging(System.Nullable<int> value);
    partial void OnDefaultSpecialServicesChanged();
    partial void OnUserDefaultsInfoChanging(System.Nullable<int> value);
    partial void OnUserDefaultsInfoChanged();
    partial void OnShipperIDChanging(System.Nullable<int> value);
    partial void OnShipperIDChanged();
    partial void OnRatesCalculatorChanging(System.Nullable<bool> value);
    partial void OnRatesCalculatorChanged();
    partial void OnFreightAmountChanging(System.Nullable<bool> value);
    partial void OnFreightAmountChanged();
    partial void OnDefaultEmailChanging(string value);
    partial void OnDefaultEmailChanged();
    partial void OnCreditCardPaymentsChanging(System.Nullable<bool> value);
    partial void OnCreditCardPaymentsChanged();
    partial void OnVIewInventoryChanging(System.Nullable<bool> value);
    partial void OnVIewInventoryChanged();
    partial void OnInventoryChanging(string value);
    partial void OnInventoryChanged();
    partial void OnTrackAndConfirmShipperChanging(bool value);
    partial void OnTrackAndConfirmShipperChanged();
    partial void OnTrackAndConfirmConsigneeChanging(bool value);
    partial void OnTrackAndConfirmConsigneeChanged();
    partial void OnTrackAndConfirmBillToChanging(bool value);
    partial void OnTrackAndConfirmBillToChanged();
    partial void OnNumberOfLabelsChanging(int value);
    partial void OnNumberOfLabelsChanged();
    partial void OnAllowLTLChanging(bool value);
    partial void OnAllowLTLChanged();
    partial void OnAllowWarehouseChanging(bool value);
    partial void OnAllowWarehouseChanged();
    partial void OnAllowReportChargesChanging(bool value);
    partial void OnAllowReportChargesChanged();
    partial void OnAirportRatesChanging(bool value);
    partial void OnAirportRatesChanged();
    partial void OnGovtChanging(bool value);
    partial void OnGovtChanged();
    partial void OnCorporateIDChanging(string value);
    partial void OnCorporateIDChanged();
    partial void OnCorporateUserChanging(System.Nullable<bool> value);
    partial void OnCorporateUserChanged();
    partial void OnCompanyNumberChanging(string value);
    partial void OnCompanyNumberChanged();
    partial void OnEinIDChanging(string value);
    partial void OnEinIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    #endregion
		
		public User()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Consignees = new EntitySet<Consignee>(new Action<Consignee>(this.attach_Consignees), new Action<Consignee>(this.detach_Consignees));
			this._SBAShippers = new EntitySet<SBAShipper>(new Action<SBAShipper>(this.attach_SBAShippers), new Action<SBAShipper>(this.detach_SBAShippers));
			this._Service = default(EntityRef<Service>);
			this._address1 = default(EntityRef<SBAAddress>);
			this._SBAAddress = default(EntityRef<SBAAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="user_id", Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="role_id", Storage="_RoleID", DbType="Int")]
		public System.Nullable<int> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="passwd", Storage="_Passwd", DbType="VarChar(50)")]
		public string Passwd
		{
			get
			{
				return this._Passwd;
			}
			set
			{
				if ((this._Passwd != value))
				{
					this.OnPasswdChanging(value);
					this.SendPropertyChanging();
					this._Passwd = value;
					this.SendPropertyChanged("Passwd");
					this.OnPasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address", Storage="_Address", DbType="Int")]
		public System.Nullable<int> Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="company", Storage="_Company", DbType="VarChar(50)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref_no", Storage="_Ref_no", DbType="VarChar(50)")]
		public string RefNo
		{
			get
			{
				return this._Ref_no;
			}
			set
			{
				if ((this._Ref_no != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._Ref_no = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="origin", Storage="_Origin", DbType="VarChar(3)")]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="labels", Storage="_Labels", DbType="Bit")]
		public System.Nullable<bool> Labels
		{
			get
			{
				return this._Labels;
			}
			set
			{
				if ((this._Labels != value))
				{
					this.OnLabelsChanging(value);
					this.SendPropertyChanging();
					this._Labels = value;
					this.SendPropertyChanged("Labels");
					this.OnLabelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="station_email", Storage="_StationEmail", DbType="VarChar(50)")]
		public string StationEmail
		{
			get
			{
				return this._StationEmail;
			}
			set
			{
				if ((this._StationEmail != value))
				{
					this.OnStationEmailChanging(value);
					this.SendPropertyChanging();
					this._StationEmail = value;
					this.SendPropertyChanged("StationEmail");
					this.OnStationEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="station_phone", Storage="_StationPhone", DbType="VarChar(25)")]
		public string StationPhone
		{
			get
			{
				return this._StationPhone;
			}
			set
			{
				if ((this._StationPhone != value))
				{
					this.OnStationPhoneChanging(value);
					this.SendPropertyChanging();
					this._StationPhone = value;
					this.SendPropertyChanged("StationPhone");
					this.OnStationPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="station_phone_ex", Storage="_StationPhoneEx", DbType="VarChar(10)")]
		public string StationPhoneEx
		{
			get
			{
				return this._StationPhoneEx;
			}
			set
			{
				if ((this._StationPhoneEx != value))
				{
					this.OnStationPhoneExChanging(value);
					this.SendPropertyChanging();
					this._StationPhoneEx = value;
					this.SendPropertyChanged("StationPhoneEx");
					this.OnStationPhoneExChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="label_format", Storage="_LabelFormat", DbType="VarChar(50)")]
		public string LabelFormat
		{
			get
			{
				return this._LabelFormat;
			}
			set
			{
				if ((this._LabelFormat != value))
				{
					this.OnLabelFormatChanging(value);
					this.SendPropertyChanging();
					this._LabelFormat = value;
					this.SendPropertyChanged("LabelFormat");
					this.OnLabelFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_waybill", Storage="_EmailWaybill", DbType="Bit")]
		public System.Nullable<bool> EmailWaybill
		{
			get
			{
				return this._EmailWaybill;
			}
			set
			{
				if ((this._EmailWaybill != value))
				{
					this.OnEmailWaybillChanging(value);
					this.SendPropertyChanging();
					this._EmailWaybill = value;
					this.SendPropertyChanged("EmailWaybill");
					this.OnEmailWaybillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_for_waybill", Storage="_EmailForWaybill", DbType="VarChar(500)")]
		public string EmailForWaybill
		{
			get
			{
				return this._EmailForWaybill;
			}
			set
			{
				if ((this._EmailForWaybill != value))
				{
					this.OnEmailForWaybillChanging(value);
					this.SendPropertyChanging();
					this._EmailForWaybill = value;
					this.SendPropertyChanged("EmailForWaybill");
					this.OnEmailForWaybillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="customer_no", Storage="_CustomerNo", DbType="VarChar(50)")]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bill_to_number", Storage="_BillToNumber", DbType="VarChar(50)")]
		public string BillToNumber
		{
			get
			{
				return this._BillToNumber;
			}
			set
			{
				if ((this._BillToNumber != value))
				{
					this.OnBillToNumberChanging(value);
					this.SendPropertyChanging();
					this._BillToNumber = value;
					this.SendPropertyChanged("BillToNumber");
					this.OnBillToNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bill_to_name", Storage="_BillToName", DbType="VarChar(50)")]
		public string BillToName
		{
			get
			{
				return this._BillToName;
			}
			set
			{
				if ((this._BillToName != value))
				{
					this.OnBillToNameChanging(value);
					this.SendPropertyChanging();
					this._BillToName = value;
					this.SendPropertyChanged("BillToName");
					this.OnBillToNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bill_to_address", Storage="_BillToAddress", DbType="Int")]
		public System.Nullable<int> BillToAddress
		{
			get
			{
				return this._BillToAddress;
			}
			set
			{
				if ((this._BillToAddress != value))
				{
					this.OnBillToAddressChanging(value);
					this.SendPropertyChanging();
					this._BillToAddress = value;
					this.SendPropertyChanged("BillToAddress");
					this.OnBillToAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bill_to_contact", Storage="_BillToContact", DbType="VarChar(50)")]
		public string BillToContact
		{
			get
			{
				return this._BillToContact;
			}
			set
			{
				if ((this._BillToContact != value))
				{
					this.OnBillToContactChanging(value);
					this.SendPropertyChanging();
					this._BillToContact = value;
					this.SendPropertyChanged("BillToContact");
					this.OnBillToContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="show_shipper", Storage="_ShowShipper", DbType="Bit")]
		public System.Nullable<bool> ShowShipper
		{
			get
			{
				return this._ShowShipper;
			}
			set
			{
				if ((this._ShowShipper != value))
				{
					this.OnShowShipperChanging(value);
					this.SendPropertyChanging();
					this._ShowShipper = value;
					this.SendPropertyChanged("ShowShipper");
					this.OnShowShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="default_service", Storage="_DefaultService", DbType="Int")]
		public System.Nullable<int> DefaultService
		{
			get
			{
				return this._DefaultService;
			}
			set
			{
				if ((this._DefaultService != value))
				{
					this.OnDefaultServiceChanging(value);
					this.SendPropertyChanging();
					this._DefaultService = value;
					this.SendPropertyChanged("DefaultService");
					this.OnDefaultServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ready_time", Storage="_ReadyTime", DbType="VarChar(50)")]
		public string ReadyTime
		{
			get
			{
				return this._ReadyTime;
			}
			set
			{
				if ((this._ReadyTime != value))
				{
					this.OnReadyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReadyTime = value;
					this.SendPropertyChanged("ReadyTime");
					this.OnReadyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="close_time", Storage="_CloseTime", DbType="VarChar(50)")]
		public string CloseTime
		{
			get
			{
				return this._CloseTime;
			}
			set
			{
				if ((this._CloseTime != value))
				{
					this.OnCloseTimeChanging(value);
					this.SendPropertyChanging();
					this._CloseTime = value;
					this.SendPropertyChanged("CloseTime");
					this.OnCloseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="spec_instr", Storage="_SpecInstr", DbType="VarChar(600)")]
		public string SpecInstr
		{
			get
			{
				return this._SpecInstr;
			}
			set
			{
				if ((this._SpecInstr != value))
				{
					this.OnSpecInstrChanging(value);
					this.SendPropertyChanging();
					this._SpecInstr = value;
					this.SendPropertyChanged("SpecInstr");
					this.OnSpecInstrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_status_updates", Storage="_EmailStatusUpdates", DbType="Bit")]
		public System.Nullable<bool> EmailStatusUpdates
		{
			get
			{
				return this._EmailStatusUpdates;
			}
			set
			{
				if ((this._EmailStatusUpdates != value))
				{
					this.OnEmailStatusUpdatesChanging(value);
					this.SendPropertyChanging();
					this._EmailStatusUpdates = value;
					this.SendPropertyChanged("EmailStatusUpdates");
					this.OnEmailStatusUpdatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref_num_reqired", Storage="_RefNumReqired", DbType="Bit")]
		public System.Nullable<bool> RefNumReqired
		{
			get
			{
				return this._RefNumReqired;
			}
			set
			{
				if ((this._RefNumReqired != value))
				{
					this.OnRefNumReqiredChanging(value);
					this.SendPropertyChanging();
					this._RefNumReqired = value;
					this.SendPropertyChanged("RefNumReqired");
					this.OnRefNumReqiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="quote_only", Storage="_QuoteOnly", DbType="Bit")]
		public System.Nullable<bool> QuoteOnly
		{
			get
			{
				return this._QuoteOnly;
			}
			set
			{
				if ((this._QuoteOnly != value))
				{
					this.OnQuoteOnlyChanging(value);
					this.SendPropertyChanging();
					this._QuoteOnly = value;
					this.SendPropertyChanged("QuoteOnly");
					this.OnQuoteOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dims_required", Storage="_DimsRequired", DbType="Bit")]
		public System.Nullable<bool> DimsRequired
		{
			get
			{
				return this._DimsRequired;
			}
			set
			{
				if ((this._DimsRequired != value))
				{
					this.OnDimsRequiredChanging(value);
					this.SendPropertyChanging();
					this._DimsRequired = value;
					this.SendPropertyChanged("DimsRequired");
					this.OnDimsRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dim_factors_economy", Storage="_DimFactorsEconomy", DbType="Int NOT NULL")]
		public int DimFactorsEconomy
		{
			get
			{
				return this._DimFactorsEconomy;
			}
			set
			{
				if ((this._DimFactorsEconomy != value))
				{
					this.OnDimFactorsEconomyChanging(value);
					this.SendPropertyChanging();
					this._DimFactorsEconomy = value;
					this.SendPropertyChanged("DimFactorsEconomy");
					this.OnDimFactorsEconomyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dim_factors_dom", Storage="_DimFactorsDom", DbType="Int NOT NULL")]
		public int DimFactorsDom
		{
			get
			{
				return this._DimFactorsDom;
			}
			set
			{
				if ((this._DimFactorsDom != value))
				{
					this.OnDimFactorsDomChanging(value);
					this.SendPropertyChanging();
					this._DimFactorsDom = value;
					this.SendPropertyChanged("DimFactorsDom");
					this.OnDimFactorsDomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dim_factors_intl", Storage="_DimFactorsIntl", DbType="Int")]
		public System.Nullable<int> DimFactorsIntl
		{
			get
			{
				return this._DimFactorsIntl;
			}
			set
			{
				if ((this._DimFactorsIntl != value))
				{
					this.OnDimFactorsIntlChanging(value);
					this.SendPropertyChanging();
					this._DimFactorsIntl = value;
					this.SendPropertyChanged("DimFactorsIntl");
					this.OnDimFactorsIntlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="date_created", Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="last_login", Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="default_special_services", Storage="_DefaultSpecialServices", DbType="Int")]
		public System.Nullable<int> DefaultSpecialServices
		{
			get
			{
				return this._DefaultSpecialServices;
			}
			set
			{
				if ((this._DefaultSpecialServices != value))
				{
					this.OnDefaultSpecialServicesChanging(value);
					this.SendPropertyChanging();
					this._DefaultSpecialServices = value;
					this.SendPropertyChanged("DefaultSpecialServices");
					this.OnDefaultSpecialServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="user_defaults_info", Storage="_UserDefaultsInfo", DbType="Int")]
		public System.Nullable<int> UserDefaultsInfo
		{
			get
			{
				return this._UserDefaultsInfo;
			}
			set
			{
				if ((this._UserDefaultsInfo != value))
				{
					this.OnUserDefaultsInfoChanging(value);
					this.SendPropertyChanging();
					this._UserDefaultsInfo = value;
					this.SendPropertyChanged("UserDefaultsInfo");
					this.OnUserDefaultsInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shipperId", Storage="_ShipperID", DbType="Int")]
		public System.Nullable<int> ShipperID
		{
			get
			{
				return this._ShipperID;
			}
			set
			{
				if ((this._ShipperID != value))
				{
					this.OnShipperIDChanging(value);
					this.SendPropertyChanging();
					this._ShipperID = value;
					this.SendPropertyChanged("ShipperID");
					this.OnShipperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rates_calculator", Storage="_RatesCalculator", DbType="Bit")]
		public System.Nullable<bool> RatesCalculator
		{
			get
			{
				return this._RatesCalculator;
			}
			set
			{
				if ((this._RatesCalculator != value))
				{
					this.OnRatesCalculatorChanging(value);
					this.SendPropertyChanging();
					this._RatesCalculator = value;
					this.SendPropertyChanged("RatesCalculator");
					this.OnRatesCalculatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="freight_amount", Storage="_FreightAmount", DbType="Bit")]
		public System.Nullable<bool> FreightAmount
		{
			get
			{
				return this._FreightAmount;
			}
			set
			{
				if ((this._FreightAmount != value))
				{
					this.OnFreightAmountChanging(value);
					this.SendPropertyChanging();
					this._FreightAmount = value;
					this.SendPropertyChanged("FreightAmount");
					this.OnFreightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="default_email", Storage="_DefaultEmail", DbType="VarChar(50)")]
		public string DefaultEmail
		{
			get
			{
				return this._DefaultEmail;
			}
			set
			{
				if ((this._DefaultEmail != value))
				{
					this.OnDefaultEmailChanging(value);
					this.SendPropertyChanging();
					this._DefaultEmail = value;
					this.SendPropertyChanged("DefaultEmail");
					this.OnDefaultEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="credit_card_payments", Storage="_CreditCardPayments", DbType="Bit")]
		public System.Nullable<bool> CreditCardPayments
		{
			get
			{
				return this._CreditCardPayments;
			}
			set
			{
				if ((this._CreditCardPayments != value))
				{
					this.OnCreditCardPaymentsChanging(value);
					this.SendPropertyChanging();
					this._CreditCardPayments = value;
					this.SendPropertyChanged("CreditCardPayments");
					this.OnCreditCardPaymentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="view_inventory", Storage="_VIewInventory", DbType="Bit")]
		public System.Nullable<bool> VIewInventory
		{
			get
			{
				return this._VIewInventory;
			}
			set
			{
				if ((this._VIewInventory != value))
				{
					this.OnVIewInventoryChanging(value);
					this.SendPropertyChanging();
					this._VIewInventory = value;
					this.SendPropertyChanged("VIewInventory");
					this.OnVIewInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="inventory", Storage="_Inventory", DbType="NVarChar(30)")]
		public string Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this.OnInventoryChanging(value);
					this.SendPropertyChanging();
					this._Inventory = value;
					this.SendPropertyChanged("Inventory");
					this.OnInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trackAndConfirmShipper", Storage="_TrackAndConfirmShipper", DbType="Bit NOT NULL")]
		public bool TrackAndConfirmShipper
		{
			get
			{
				return this._TrackAndConfirmShipper;
			}
			set
			{
				if ((this._TrackAndConfirmShipper != value))
				{
					this.OnTrackAndConfirmShipperChanging(value);
					this.SendPropertyChanging();
					this._TrackAndConfirmShipper = value;
					this.SendPropertyChanged("TrackAndConfirmShipper");
					this.OnTrackAndConfirmShipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trackAndConfirmConsignee", Storage="_TrackAndConfirmConsignee", DbType="Bit NOT NULL")]
		public bool TrackAndConfirmConsignee
		{
			get
			{
				return this._TrackAndConfirmConsignee;
			}
			set
			{
				if ((this._TrackAndConfirmConsignee != value))
				{
					this.OnTrackAndConfirmConsigneeChanging(value);
					this.SendPropertyChanging();
					this._TrackAndConfirmConsignee = value;
					this.SendPropertyChanged("TrackAndConfirmConsignee");
					this.OnTrackAndConfirmConsigneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="trackAndConfirmBillTo", Storage="_TrackAndConfirmBillTo", DbType="Bit NOT NULL")]
		public bool TrackAndConfirmBillTo
		{
			get
			{
				return this._TrackAndConfirmBillTo;
			}
			set
			{
				if ((this._TrackAndConfirmBillTo != value))
				{
					this.OnTrackAndConfirmBillToChanging(value);
					this.SendPropertyChanging();
					this._TrackAndConfirmBillTo = value;
					this.SendPropertyChanged("TrackAndConfirmBillTo");
					this.OnTrackAndConfirmBillToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="numberOfLabels", Storage="_NumberOfLabels", DbType="Int NOT NULL")]
		public int NumberOfLabels
		{
			get
			{
				return this._NumberOfLabels;
			}
			set
			{
				if ((this._NumberOfLabels != value))
				{
					this.OnNumberOfLabelsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfLabels = value;
					this.SendPropertyChanged("NumberOfLabels");
					this.OnNumberOfLabelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="allowLTL", Storage="_AllowLTL", DbType="Bit NOT NULL")]
		public bool AllowLTL
		{
			get
			{
				return this._AllowLTL;
			}
			set
			{
				if ((this._AllowLTL != value))
				{
					this.OnAllowLTLChanging(value);
					this.SendPropertyChanging();
					this._AllowLTL = value;
					this.SendPropertyChanged("AllowLTL");
					this.OnAllowLTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="allowWarehouse", Storage="_AllowWarehouse", DbType="Bit NOT NULL")]
		public bool AllowWarehouse
		{
			get
			{
				return this._AllowWarehouse;
			}
			set
			{
				if ((this._AllowWarehouse != value))
				{
					this.OnAllowWarehouseChanging(value);
					this.SendPropertyChanging();
					this._AllowWarehouse = value;
					this.SendPropertyChanged("AllowWarehouse");
					this.OnAllowWarehouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="allowReportCharges", Storage="_AllowReportCharges", DbType="Bit NOT NULL")]
		public bool AllowReportCharges
		{
			get
			{
				return this._AllowReportCharges;
			}
			set
			{
				if ((this._AllowReportCharges != value))
				{
					this.OnAllowReportChargesChanging(value);
					this.SendPropertyChanging();
					this._AllowReportCharges = value;
					this.SendPropertyChanged("AllowReportCharges");
					this.OnAllowReportChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirportRates", DbType="Bit NOT NULL")]
		public bool AirportRates
		{
			get
			{
				return this._AirportRates;
			}
			set
			{
				if ((this._AirportRates != value))
				{
					this.OnAirportRatesChanging(value);
					this.SendPropertyChanging();
					this._AirportRates = value;
					this.SendPropertyChanged("AirportRates");
					this.OnAirportRatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Govt", DbType="Bit NOT NULL")]
		public bool Govt
		{
			get
			{
				return this._Govt;
			}
			set
			{
				if ((this._Govt != value))
				{
					this.OnGovtChanging(value);
					this.SendPropertyChanging();
					this._Govt = value;
					this.SendPropertyChanged("Govt");
					this.OnGovtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="corporate_id", Storage="_CorporateID", DbType="VarChar(20)")]
		public string CorporateID
		{
			get
			{
				return this._CorporateID;
			}
			set
			{
				if ((this._CorporateID != value))
				{
					this.OnCorporateIDChanging(value);
					this.SendPropertyChanging();
					this._CorporateID = value;
					this.SendPropertyChanged("CorporateID");
					this.OnCorporateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="corporate_user", Storage="_CorporateUser", DbType="Bit")]
		public System.Nullable<bool> CorporateUser
		{
			get
			{
				return this._CorporateUser;
			}
			set
			{
				if ((this._CorporateUser != value))
				{
					this.OnCorporateUserChanging(value);
					this.SendPropertyChanging();
					this._CorporateUser = value;
					this.SendPropertyChanged("CorporateUser");
					this.OnCorporateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="company_number", Storage="_CompanyNumber", DbType="VarChar(20)")]
		public string CompanyNumber
		{
			get
			{
				return this._CompanyNumber;
			}
			set
			{
				if ((this._CompanyNumber != value))
				{
					this.OnCompanyNumberChanging(value);
					this.SendPropertyChanging();
					this._CompanyNumber = value;
					this.SendPropertyChanged("CompanyNumber");
					this.OnCompanyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ein_id", Storage="_EinID", DbType="VarChar(20)")]
		public string EinID
		{
			get
			{
				return this._EinID;
			}
			set
			{
				if ((this._EinID != value))
				{
					this.OnEinIDChanging(value);
					this.SendPropertyChanging();
					this._EinID = value;
					this.SendPropertyChanged("EinID");
					this.OnEinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="employee_id", Storage="_EmployeeID", DbType="VarChar(20)")]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Consignee", Storage="_Consignees", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Consignee> Consignees
		{
			get
			{
				return this._Consignees;
			}
			set
			{
				this._Consignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SBAShipper", Storage="_SBAShippers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<SBAShipper> SBAShippers
		{
			get
			{
				return this._SBAShippers;
			}
			set
			{
				this._SBAShippers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_User", Storage="_Service", ThisKey="DefaultService", OtherKey="ServiceID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._DefaultService = value.ServiceID;
					}
					else
					{
						this._DefaultService = default(Nullable<int>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_User", Storage="_address1", ThisKey="Address", OtherKey="AddressID", IsForeignKey=true)]
		public SBAAddress SBAAddress
		{
			get
			{
				return this._address1.Entity;
			}
			set
			{
				SBAAddress previousValue = this._address1.Entity;
				if (((previousValue != value) 
							|| (this._address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._address1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Address = value.AddressID;
					}
					else
					{
						this._Address = default(Nullable<int>);
					}
					this.SendPropertyChanged("SBAAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_User1", Storage="_SBAAddress", ThisKey="BillToAddress", OtherKey="AddressID", IsForeignKey=true)]
		public SBAAddress BTAddress
		{
			get
			{
				return this._SBAAddress.Entity;
			}
			set
			{
				SBAAddress previousValue = this._SBAAddress.Entity;
				if (((previousValue != value) 
							|| (this._SBAAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SBAAddress.Entity = null;
						previousValue.Users1.Remove(this);
					}
					this._SBAAddress.Entity = value;
					if ((value != null))
					{
						value.Users1.Add(this);
						this._BillToAddress = value.AddressID;
					}
					else
					{
						this._BillToAddress = default(Nullable<int>);
					}
					this.SendPropertyChanged("BTAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Consignees(Consignee entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Consignees(Consignee entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SBAShippers(SBAShipper entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SBAShippers(SBAShipper entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Description;
		
		private int _ServiceID;
		
		private System.Nullable<bool> _IsDomestic;
		
		private System.Nullable<bool> _IsSpecial;
		
		private System.Nullable<char> _RateType;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnIsDomesticChanging(System.Nullable<bool> value);
    partial void OnIsDomesticChanged();
    partial void OnIsSpecialChanging(System.Nullable<bool> value);
    partial void OnIsSpecialChanged();
    partial void OnRateTypeChanging(System.Nullable<char> value);
    partial void OnRateTypeChanged();
    #endregion
		
		public Service()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="service_id", Storage="_ServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isDomestic", Storage="_IsDomestic", DbType="Bit")]
		public System.Nullable<bool> IsDomestic
		{
			get
			{
				return this._IsDomestic;
			}
			set
			{
				if ((this._IsDomestic != value))
				{
					this.OnIsDomesticChanging(value);
					this.SendPropertyChanging();
					this._IsDomestic = value;
					this.SendPropertyChanged("IsDomestic");
					this.OnIsDomesticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isSpecial", Storage="_IsSpecial", DbType="Bit")]
		public System.Nullable<bool> IsSpecial
		{
			get
			{
				return this._IsSpecial;
			}
			set
			{
				if ((this._IsSpecial != value))
				{
					this.OnIsSpecialChanging(value);
					this.SendPropertyChanging();
					this._IsSpecial = value;
					this.SendPropertyChanged("IsSpecial");
					this.OnIsSpecialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="rate_type", Storage="_RateType", DbType="Char(1)")]
		public System.Nullable<char> RateType
		{
			get
			{
				return this._RateType;
			}
			set
			{
				if ((this._RateType != value))
				{
					this.OnRateTypeChanging(value);
					this.SendPropertyChanging();
					this._RateType = value;
					this.SendPropertyChanged("RateType");
					this.OnRateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Order", Storage="_Orders", ThisKey="ServiceID", OtherKey="ServiceID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_User", Storage="_Users", ThisKey="ServiceID", OtherKey="DefaultService")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.consignee")]
	public partial class Consignee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConsigneeID;
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private string _Company;
		
		private System.Nullable<int> _Address;
		
		private string _RefNo;
		
		private bool _IsAssignedToOrder;
		
		private bool _IsCreatedFromExistingObject;
		
		private bool _IsAssignedToAddressBook;
		
		private System.Nullable<bool> _EmailWaybill;
		
		private string _EmailForWaybill;
		
		private string _CustomerNo;
		
		private string _AccountNo;
		
		private bool _TrackAndConfirm;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<User> _User;
		
		private EntityRef<SBAAddress> _SBAAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConsigneeIDChanging(int value);
    partial void OnConsigneeIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(System.Nullable<int> value);
    partial void OnAddressChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnIsAssignedToOrderChanging(bool value);
    partial void OnIsAssignedToOrderChanged();
    partial void OnIsCreatedFromExistingObjectChanging(bool value);
    partial void OnIsCreatedFromExistingObjectChanged();
    partial void OnIsAssignedToAddressBookChanging(bool value);
    partial void OnIsAssignedToAddressBookChanged();
    partial void OnEmailWaybillChanging(System.Nullable<bool> value);
    partial void OnEmailWaybillChanged();
    partial void OnEmailForWaybillChanging(string value);
    partial void OnEmailForWaybillChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnTrackAndConfirmChanging(bool value);
    partial void OnTrackAndConfirmChanged();
    #endregion
		
		public Consignee()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._User = default(EntityRef<User>);
			this._SBAAddress = default(EntityRef<SBAAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="consignee_id", Storage="_ConsigneeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConsigneeID
		{
			get
			{
				return this._ConsigneeID;
			}
			set
			{
				if ((this._ConsigneeID != value))
				{
					this.OnConsigneeIDChanging(value);
					this.SendPropertyChanging();
					this._ConsigneeID = value;
					this.SendPropertyChanged("ConsigneeID");
					this.OnConsigneeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="user_id", Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="company", Storage="_Company", DbType="NVarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address", Storage="_Address", DbType="Int")]
		public System.Nullable<int> Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref_no", Storage="_RefNo", DbType="NVarChar(50)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isAssignedToOrder", Storage="_IsAssignedToOrder", DbType="Bit NOT NULL")]
		public bool IsAssignedToOrder
		{
			get
			{
				return this._IsAssignedToOrder;
			}
			set
			{
				if ((this._IsAssignedToOrder != value))
				{
					this.OnIsAssignedToOrderChanging(value);
					this.SendPropertyChanging();
					this._IsAssignedToOrder = value;
					this.SendPropertyChanged("IsAssignedToOrder");
					this.OnIsAssignedToOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isCreatedFromExistingObject", Storage="_IsCreatedFromExistingObject", DbType="Bit NOT NULL")]
		public bool IsCreatedFromExistingObject
		{
			get
			{
				return this._IsCreatedFromExistingObject;
			}
			set
			{
				if ((this._IsCreatedFromExistingObject != value))
				{
					this.OnIsCreatedFromExistingObjectChanging(value);
					this.SendPropertyChanging();
					this._IsCreatedFromExistingObject = value;
					this.SendPropertyChanged("IsCreatedFromExistingObject");
					this.OnIsCreatedFromExistingObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isAssignedToAddressBook", Storage="_IsAssignedToAddressBook", DbType="Bit NOT NULL")]
		public bool IsAssignedToAddressBook
		{
			get
			{
				return this._IsAssignedToAddressBook;
			}
			set
			{
				if ((this._IsAssignedToAddressBook != value))
				{
					this.OnIsAssignedToAddressBookChanging(value);
					this.SendPropertyChanging();
					this._IsAssignedToAddressBook = value;
					this.SendPropertyChanged("IsAssignedToAddressBook");
					this.OnIsAssignedToAddressBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_waybill", Storage="_EmailWaybill", DbType="Bit")]
		public System.Nullable<bool> EmailWaybill
		{
			get
			{
				return this._EmailWaybill;
			}
			set
			{
				if ((this._EmailWaybill != value))
				{
					this.OnEmailWaybillChanging(value);
					this.SendPropertyChanging();
					this._EmailWaybill = value;
					this.SendPropertyChanged("EmailWaybill");
					this.OnEmailWaybillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_for_waybill", Storage="_EmailForWaybill", DbType="NVarChar(100)")]
		public string EmailForWaybill
		{
			get
			{
				return this._EmailForWaybill;
			}
			set
			{
				if ((this._EmailForWaybill != value))
				{
					this.OnEmailForWaybillChanging(value);
					this.SendPropertyChanging();
					this._EmailForWaybill = value;
					this.SendPropertyChanged("EmailForWaybill");
					this.OnEmailForWaybillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="customer_no", Storage="_CustomerNo", DbType="NVarChar(50)")]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="account_no", Storage="_AccountNo", DbType="NVarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="track_n_confirm", Storage="_TrackAndConfirm", DbType="Bit NOT NULL")]
		public bool TrackAndConfirm
		{
			get
			{
				return this._TrackAndConfirm;
			}
			set
			{
				if ((this._TrackAndConfirm != value))
				{
					this.OnTrackAndConfirmChanging(value);
					this.SendPropertyChanging();
					this._TrackAndConfirm = value;
					this.SendPropertyChanged("TrackAndConfirm");
					this.OnTrackAndConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consignee_Order", Storage="_Orders", ThisKey="ConsigneeID", OtherKey="ConsigneeID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Consignee", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Consignees.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Consignees.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_Consignee", Storage="_SBAAddress", ThisKey="Address", OtherKey="AddressID", IsForeignKey=true)]
		public SBAAddress SBAAddress
		{
			get
			{
				return this._SBAAddress.Entity;
			}
			set
			{
				SBAAddress previousValue = this._SBAAddress.Entity;
				if (((previousValue != value) 
							|| (this._SBAAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SBAAddress.Entity = null;
						previousValue.Consignees.Remove(this);
					}
					this._SBAAddress.Entity = value;
					if ((value != null))
					{
						value.Consignees.Add(this);
						this._Address = value.AddressID;
					}
					else
					{
						this._Address = default(Nullable<int>);
					}
					this.SendPropertyChanged("SBAAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Consignee = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Consignee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.shipper")]
	public partial class SBAShipper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShipperID;
		
		private System.Nullable<int> _UserID;
		
		private string _Name;
		
		private System.Nullable<int> _Address;
		
		private string _RefNo;
		
		private string _Contact;
		
		private string _Company;
		
		private string _CustomerNo;
		
		private bool _IsAssignedToOrder;
		
		private bool _IsCreatedFromExistingObject;
		
		private System.Nullable<bool> _EmailWaybill;
		
		private string _EmailForWaybill;
		
		private bool _IsAssignedToAddressBook;
		
		private string _AccountNo;
		
		private bool _TrackAndConfirm;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<User> _User;
		
		private EntityRef<SBAAddress> _SBAAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipperIDChanging(int value);
    partial void OnShipperIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(System.Nullable<int> value);
    partial void OnAddressChanged();
    partial void OnRefNoChanging(string value);
    partial void OnRefNoChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnIsAssignedToOrderChanging(bool value);
    partial void OnIsAssignedToOrderChanged();
    partial void OnIsCreatedFromExistingObjectChanging(bool value);
    partial void OnIsCreatedFromExistingObjectChanged();
    partial void OnEmailWaybillChanging(System.Nullable<bool> value);
    partial void OnEmailWaybillChanged();
    partial void OnEmailForWaybillChanging(string value);
    partial void OnEmailForWaybillChanged();
    partial void OnIsAssignedToAddressBookChanging(bool value);
    partial void OnIsAssignedToAddressBookChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnTrackAndConfirmChanging(bool value);
    partial void OnTrackAndConfirmChanged();
    #endregion
		
		public SBAShipper()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._User = default(EntityRef<User>);
			this._SBAAddress = default(EntityRef<SBAAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shipper_id", Storage="_ShipperID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShipperID
		{
			get
			{
				return this._ShipperID;
			}
			set
			{
				if ((this._ShipperID != value))
				{
					this.OnShipperIDChanging(value);
					this.SendPropertyChanging();
					this._ShipperID = value;
					this.SendPropertyChanged("ShipperID");
					this.OnShipperIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="user_id", Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address", Storage="_Address", DbType="Int")]
		public System.Nullable<int> Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ref_no", Storage="_RefNo", DbType="NVarChar(50)")]
		public string RefNo
		{
			get
			{
				return this._RefNo;
			}
			set
			{
				if ((this._RefNo != value))
				{
					this.OnRefNoChanging(value);
					this.SendPropertyChanging();
					this._RefNo = value;
					this.SendPropertyChanged("RefNo");
					this.OnRefNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="contact", Storage="_Contact", DbType="NVarChar(100)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="company", Storage="_Company", DbType="NVarChar(200)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="customer_no", Storage="_CustomerNo", DbType="NVarChar(50)")]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isAssignedToOrder", Storage="_IsAssignedToOrder", DbType="Bit NOT NULL")]
		public bool IsAssignedToOrder
		{
			get
			{
				return this._IsAssignedToOrder;
			}
			set
			{
				if ((this._IsAssignedToOrder != value))
				{
					this.OnIsAssignedToOrderChanging(value);
					this.SendPropertyChanging();
					this._IsAssignedToOrder = value;
					this.SendPropertyChanged("IsAssignedToOrder");
					this.OnIsAssignedToOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isCreatedFromExistingObject", Storage="_IsCreatedFromExistingObject", DbType="Bit NOT NULL")]
		public bool IsCreatedFromExistingObject
		{
			get
			{
				return this._IsCreatedFromExistingObject;
			}
			set
			{
				if ((this._IsCreatedFromExistingObject != value))
				{
					this.OnIsCreatedFromExistingObjectChanging(value);
					this.SendPropertyChanging();
					this._IsCreatedFromExistingObject = value;
					this.SendPropertyChanged("IsCreatedFromExistingObject");
					this.OnIsCreatedFromExistingObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_waybill", Storage="_EmailWaybill", DbType="Bit")]
		public System.Nullable<bool> EmailWaybill
		{
			get
			{
				return this._EmailWaybill;
			}
			set
			{
				if ((this._EmailWaybill != value))
				{
					this.OnEmailWaybillChanging(value);
					this.SendPropertyChanging();
					this._EmailWaybill = value;
					this.SendPropertyChanged("EmailWaybill");
					this.OnEmailWaybillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email_for_waybill", Storage="_EmailForWaybill", DbType="NVarChar(100)")]
		public string EmailForWaybill
		{
			get
			{
				return this._EmailForWaybill;
			}
			set
			{
				if ((this._EmailForWaybill != value))
				{
					this.OnEmailForWaybillChanging(value);
					this.SendPropertyChanging();
					this._EmailForWaybill = value;
					this.SendPropertyChanged("EmailForWaybill");
					this.OnEmailForWaybillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="isAssignedToAddressBook", Storage="_IsAssignedToAddressBook", DbType="Bit NOT NULL")]
		public bool IsAssignedToAddressBook
		{
			get
			{
				return this._IsAssignedToAddressBook;
			}
			set
			{
				if ((this._IsAssignedToAddressBook != value))
				{
					this.OnIsAssignedToAddressBookChanging(value);
					this.SendPropertyChanging();
					this._IsAssignedToAddressBook = value;
					this.SendPropertyChanged("IsAssignedToAddressBook");
					this.OnIsAssignedToAddressBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="account_no", Storage="_AccountNo", DbType="NVarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="track_n_confirm", Storage="_TrackAndConfirm", DbType="Bit NOT NULL")]
		public bool TrackAndConfirm
		{
			get
			{
				return this._TrackAndConfirm;
			}
			set
			{
				if ((this._TrackAndConfirm != value))
				{
					this.OnTrackAndConfirmChanging(value);
					this.SendPropertyChanging();
					this._TrackAndConfirm = value;
					this.SendPropertyChanged("TrackAndConfirm");
					this.OnTrackAndConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAShipper_Order", Storage="_Orders", ThisKey="ShipperID", OtherKey="ShipperID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SBAShipper", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SBAShippers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SBAShippers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_SBAShipper", Storage="_SBAAddress", ThisKey="Address", OtherKey="AddressID", IsForeignKey=true)]
		public SBAAddress SBAAddress
		{
			get
			{
				return this._SBAAddress.Entity;
			}
			set
			{
				SBAAddress previousValue = this._SBAAddress.Entity;
				if (((previousValue != value) 
							|| (this._SBAAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SBAAddress.Entity = null;
						previousValue.SBAShippers.Remove(this);
					}
					this._SBAAddress.Entity = value;
					if ((value != null))
					{
						value.SBAShippers.Add(this);
						this._Address = value.AddressID;
					}
					else
					{
						this._Address = default(Nullable<int>);
					}
					this.SendPropertyChanged("SBAAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.SBAShipper = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.SBAShipper = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.address")]
	public partial class SBAAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressID;
		
		private string _Street;
		
		private string _Street2;
		
		private string _City;
		
		private System.Nullable<short> _State;
		
		private string _Email;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _CountryName;
		
		private EntitySet<User> _Users;
		
		private EntitySet<User> _Users1;
		
		private EntitySet<Consignee> _Consignees;
		
		private EntitySet<SBAShipper> _SBAShippers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnStreet2Changing(string value);
    partial void OnStreet2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(System.Nullable<short> value);
    partial void OnStateChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public SBAAddress()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Users1 = new EntitySet<User>(new Action<User>(this.attach_Users1), new Action<User>(this.detach_Users1));
			this._Consignees = new EntitySet<Consignee>(new Action<Consignee>(this.attach_Consignees), new Action<Consignee>(this.detach_Consignees));
			this._SBAShippers = new EntitySet<SBAShipper>(new Action<SBAShipper>(this.attach_SBAShippers), new Action<SBAShipper>(this.detach_SBAShippers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="address_id", Storage="_AddressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="street", Storage="_Street", DbType="NVarChar(50)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="street2", Storage="_Street2", DbType="NVarChar(50)")]
		public string Street2
		{
			get
			{
				return this._Street2;
			}
			set
			{
				if ((this._Street2 != value))
				{
					this.OnStreet2Changing(value);
					this.SendPropertyChanging();
					this._Street2 = value;
					this.SendPropertyChanged("Street2");
					this.OnStreet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="city", Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="state", Storage="_State", DbType="SmallInt")]
		public System.Nullable<short> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="email", Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="zip", Storage="_Zip", DbType="VarChar(50)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="phone", Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="fax", Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="countryName", Storage="_CountryName", DbType="VarChar(100)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_User", Storage="_Users", ThisKey="AddressID", OtherKey="Address")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_User1", Storage="_Users1", ThisKey="AddressID", OtherKey="BillToAddress")]
		public EntitySet<User> Users1
		{
			get
			{
				return this._Users1;
			}
			set
			{
				this._Users1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_Consignee", Storage="_Consignees", ThisKey="AddressID", OtherKey="Address")]
		public EntitySet<Consignee> Consignees
		{
			get
			{
				return this._Consignees;
			}
			set
			{
				this._Consignees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SBAAddress_SBAShipper", Storage="_SBAShippers", ThisKey="AddressID", OtherKey="Address")]
		public EntitySet<SBAShipper> SBAShippers
		{
			get
			{
				return this._SBAShippers;
			}
			set
			{
				this._SBAShippers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.SBAAddress = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.SBAAddress = null;
		}
		
		private void attach_Users1(User entity)
		{
			this.SendPropertyChanging();
			entity.BTAddress = this;
		}
		
		private void detach_Users1(User entity)
		{
			this.SendPropertyChanging();
			entity.BTAddress = null;
		}
		
		private void attach_Consignees(Consignee entity)
		{
			this.SendPropertyChanging();
			entity.SBAAddress = this;
		}
		
		private void detach_Consignees(Consignee entity)
		{
			this.SendPropertyChanging();
			entity.SBAAddress = null;
		}
		
		private void attach_SBAShippers(SBAShipper entity)
		{
			this.SendPropertyChanging();
			entity.SBAAddress = this;
		}
		
		private void detach_SBAShippers(SBAShipper entity)
		{
			this.SendPropertyChanging();
			entity.SBAAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.states")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _StateID;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<bool> _Deprecated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(short value);
    partial void OnStateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnDeprecatedChanging(System.Nullable<bool> value);
    partial void OnDeprecatedChanged();
    #endregion
		
		public State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StateId", Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(5)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deprecated", DbType="Bit")]
		public System.Nullable<bool> Deprecated
		{
			get
			{
				return this._Deprecated;
			}
			set
			{
				if ((this._Deprecated != value))
				{
					this.OnDeprecatedChanging(value);
					this.SendPropertyChanging();
					this._Deprecated = value;
					this.SendPropertyChanged("Deprecated");
					this.OnDeprecatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill_to")]
	public partial class BillTo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Shortname;
		
		private string _Description;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public BillTo()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="shortname", Storage="_Shortname", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillTo_Order", Storage="_Orders", ThisKey="Shortname", OtherKey="BillTo")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.BillTo1 = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.BillTo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdersQueue")]
	public partial class OrdersQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SequenceId;
		
		private int _OrderId;
		
		private short _ActionId;
		
		private bool _IsCompleted;
		
		private string _MainShipmentXmlName;
		
		private string _MainShipmentXml;
		
		private string _DimensionXmlName;
		
		private string _DimensionXml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSequenceIdChanging(int value);
    partial void OnSequenceIdChanged();
    partial void OnOrderIdChanging(int value);
    partial void OnOrderIdChanged();
    partial void OnActionIdChanging(short value);
    partial void OnActionIdChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    partial void OnMainShipmentXmlNameChanging(string value);
    partial void OnMainShipmentXmlNameChanged();
    partial void OnMainShipmentXmlChanging(string value);
    partial void OnMainShipmentXmlChanged();
    partial void OnDimensionXmlNameChanging(string value);
    partial void OnDimensionXmlNameChanged();
    partial void OnDimensionXmlChanging(string value);
    partial void OnDimensionXmlChanged();
    #endregion
		
		public OrdersQueue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SequenceId
		{
			get
			{
				return this._SequenceId;
			}
			set
			{
				if ((this._SequenceId != value))
				{
					this.OnSequenceIdChanging(value);
					this.SendPropertyChanging();
					this._SequenceId = value;
					this.SendPropertyChanged("SequenceId");
					this.OnSequenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="Int NOT NULL")]
		public int OrderId
		{
			get
			{
				return this._OrderId;
			}
			set
			{
				if ((this._OrderId != value))
				{
					this.OnOrderIdChanging(value);
					this.SendPropertyChanging();
					this._OrderId = value;
					this.SendPropertyChanged("OrderId");
					this.OnOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="SmallInt NOT NULL")]
		public short ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainShipmentXmlName", DbType="NVarChar(50)")]
		public string MainShipmentXmlName
		{
			get
			{
				return this._MainShipmentXmlName;
			}
			set
			{
				if ((this._MainShipmentXmlName != value))
				{
					this.OnMainShipmentXmlNameChanging(value);
					this.SendPropertyChanging();
					this._MainShipmentXmlName = value;
					this.SendPropertyChanged("MainShipmentXmlName");
					this.OnMainShipmentXmlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainShipmentXml", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MainShipmentXml
		{
			get
			{
				return this._MainShipmentXml;
			}
			set
			{
				if ((this._MainShipmentXml != value))
				{
					this.OnMainShipmentXmlChanging(value);
					this.SendPropertyChanging();
					this._MainShipmentXml = value;
					this.SendPropertyChanged("MainShipmentXml");
					this.OnMainShipmentXmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionXmlName", DbType="NVarChar(50)")]
		public string DimensionXmlName
		{
			get
			{
				return this._DimensionXmlName;
			}
			set
			{
				if ((this._DimensionXmlName != value))
				{
					this.OnDimensionXmlNameChanging(value);
					this.SendPropertyChanging();
					this._DimensionXmlName = value;
					this.SendPropertyChanged("DimensionXmlName");
					this.OnDimensionXmlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimensionXml", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DimensionXml
		{
			get
			{
				return this._DimensionXml;
			}
			set
			{
				if ((this._DimensionXml != value))
				{
					this.OnDimensionXmlChanging(value);
					this.SendPropertyChanging();
					this._DimensionXml = value;
					this.SendPropertyChanged("DimensionXml");
					this.OnDimensionXmlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingCustomers")]
	public partial class BookingCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _CustomerNumber;
		
		private string _Password;
		
		private System.Nullable<decimal> _MarkUp;
		
		private System.Nullable<int> _DimFactor;
		
		private System.Nullable<decimal> _FuelRate;
		
		private int _BookUserID;
		
		private string _NotificationEmails;
		
		private EntitySet<BookingCarrier> _BookingCarriers;
		
		private EntitySet<BookingRateState> _BookingRateStates;
		
		private EntitySet<BookingRateTariff> _BookingRateTariffs;
		
		private EntitySet<BookingRateZoneMat> _BookingRateZoneMats;
		
		private EntitySet<BookingRateBeyond> _BookingRateBeyonds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMarkUpChanging(System.Nullable<decimal> value);
    partial void OnMarkUpChanged();
    partial void OnDimFactorChanging(System.Nullable<int> value);
    partial void OnDimFactorChanged();
    partial void OnFuelRateChanging(System.Nullable<decimal> value);
    partial void OnFuelRateChanged();
    partial void OnBookUserIDChanging(int value);
    partial void OnBookUserIDChanged();
    partial void OnNotificationEmailsChanging(string value);
    partial void OnNotificationEmailsChanged();
    #endregion
		
		public BookingCustomer()
		{
			this._BookingCarriers = new EntitySet<BookingCarrier>(new Action<BookingCarrier>(this.attach_BookingCarriers), new Action<BookingCarrier>(this.detach_BookingCarriers));
			this._BookingRateStates = new EntitySet<BookingRateState>(new Action<BookingRateState>(this.attach_BookingRateStates), new Action<BookingRateState>(this.detach_BookingRateStates));
			this._BookingRateTariffs = new EntitySet<BookingRateTariff>(new Action<BookingRateTariff>(this.attach_BookingRateTariffs), new Action<BookingRateTariff>(this.detach_BookingRateTariffs));
			this._BookingRateZoneMats = new EntitySet<BookingRateZoneMat>(new Action<BookingRateZoneMat>(this.attach_BookingRateZoneMats), new Action<BookingRateZoneMat>(this.detach_BookingRateZoneMats));
			this._BookingRateBeyonds = new EntitySet<BookingRateBeyond>(new Action<BookingRateBeyond>(this.attach_BookingRateBeyonds), new Action<BookingRateBeyond>(this.detach_BookingRateBeyonds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="NVarChar(50)")]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkUp", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> MarkUp
		{
			get
			{
				return this._MarkUp;
			}
			set
			{
				if ((this._MarkUp != value))
				{
					this.OnMarkUpChanging(value);
					this.SendPropertyChanging();
					this._MarkUp = value;
					this.SendPropertyChanged("MarkUp");
					this.OnMarkUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimFactor", DbType="Int")]
		public System.Nullable<int> DimFactor
		{
			get
			{
				return this._DimFactor;
			}
			set
			{
				if ((this._DimFactor != value))
				{
					this.OnDimFactorChanging(value);
					this.SendPropertyChanging();
					this._DimFactor = value;
					this.SendPropertyChanged("DimFactor");
					this.OnDimFactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelRate", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> FuelRate
		{
			get
			{
				return this._FuelRate;
			}
			set
			{
				if ((this._FuelRate != value))
				{
					this.OnFuelRateChanging(value);
					this.SendPropertyChanging();
					this._FuelRate = value;
					this.SendPropertyChanged("FuelRate");
					this.OnFuelRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookUserID", DbType="Int NOT NULL")]
		public int BookUserID
		{
			get
			{
				return this._BookUserID;
			}
			set
			{
				if ((this._BookUserID != value))
				{
					this.OnBookUserIDChanging(value);
					this.SendPropertyChanging();
					this._BookUserID = value;
					this.SendPropertyChanged("BookUserID");
					this.OnBookUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationEmails", DbType="NVarChar(500)")]
		public string NotificationEmails
		{
			get
			{
				return this._NotificationEmails;
			}
			set
			{
				if ((this._NotificationEmails != value))
				{
					this.OnNotificationEmailsChanging(value);
					this.SendPropertyChanging();
					this._NotificationEmails = value;
					this.SendPropertyChanged("NotificationEmails");
					this.OnNotificationEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingCarrier", Storage="_BookingCarriers", ThisKey="CustomerID", OtherKey="BookingCustomerID")]
		public EntitySet<BookingCarrier> BookingCarriers
		{
			get
			{
				return this._BookingCarriers;
			}
			set
			{
				this._BookingCarriers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateState", Storage="_BookingRateStates", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<BookingRateState> BookingRateStates
		{
			get
			{
				return this._BookingRateStates;
			}
			set
			{
				this._BookingRateStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateTariff", Storage="_BookingRateTariffs", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<BookingRateTariff> BookingRateTariffs
		{
			get
			{
				return this._BookingRateTariffs;
			}
			set
			{
				this._BookingRateTariffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateZoneMat", Storage="_BookingRateZoneMats", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<BookingRateZoneMat> BookingRateZoneMats
		{
			get
			{
				return this._BookingRateZoneMats;
			}
			set
			{
				this._BookingRateZoneMats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCustomer_BookingRateBeyond", Storage="_BookingRateBeyonds", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<BookingRateBeyond> BookingRateBeyonds
		{
			get
			{
				return this._BookingRateBeyonds;
			}
			set
			{
				this._BookingRateBeyonds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingCarriers(BookingCarrier entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = this;
		}
		
		private void detach_BookingCarriers(BookingCarrier entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = null;
		}
		
		private void attach_BookingRateStates(BookingRateState entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = this;
		}
		
		private void detach_BookingRateStates(BookingRateState entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = null;
		}
		
		private void attach_BookingRateTariffs(BookingRateTariff entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = this;
		}
		
		private void detach_BookingRateTariffs(BookingRateTariff entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = null;
		}
		
		private void attach_BookingRateZoneMats(BookingRateZoneMat entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = this;
		}
		
		private void detach_BookingRateZoneMats(BookingRateZoneMat entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = null;
		}
		
		private void attach_BookingRateBeyonds(BookingRateBeyond entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = this;
		}
		
		private void detach_BookingRateBeyonds(BookingRateBeyond entity)
		{
			this.SendPropertyChanging();
			entity.BookingCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingServices")]
	public partial class BookingService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingServiceID;
		
		private string _ServiceName;
		
		private string _ServiceCode;
		
		private System.Nullable<int> _CarrierID;
		
		private System.Nullable<int> _ConditionID;
		
		private int _Priority;
		
		private EntityRef<BookingCarrier> _BookingCarrier;
		
		private EntityRef<BookingCondition> _BookingCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingServiceIDChanging(int value);
    partial void OnBookingServiceIDChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnServiceCodeChanging(string value);
    partial void OnServiceCodeChanged();
    partial void OnCarrierIDChanging(System.Nullable<int> value);
    partial void OnCarrierIDChanged();
    partial void OnConditionIDChanging(System.Nullable<int> value);
    partial void OnConditionIDChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    #endregion
		
		public BookingService()
		{
			this._BookingCarrier = default(EntityRef<BookingCarrier>);
			this._BookingCondition = default(EntityRef<BookingCondition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingServiceID
		{
			get
			{
				return this._BookingServiceID;
			}
			set
			{
				if ((this._BookingServiceID != value))
				{
					this.OnBookingServiceIDChanging(value);
					this.SendPropertyChanging();
					this._BookingServiceID = value;
					this.SendPropertyChanged("BookingServiceID");
					this.OnBookingServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(50)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceCode", DbType="NVarChar(10)")]
		public string ServiceCode
		{
			get
			{
				return this._ServiceCode;
			}
			set
			{
				if ((this._ServiceCode != value))
				{
					this.OnServiceCodeChanging(value);
					this.SendPropertyChanging();
					this._ServiceCode = value;
					this.SendPropertyChanged("ServiceCode");
					this.OnServiceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierID", DbType="Int")]
		public System.Nullable<int> CarrierID
		{
			get
			{
				return this._CarrierID;
			}
			set
			{
				if ((this._CarrierID != value))
				{
					if (this._BookingCarrier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierIDChanging(value);
					this.SendPropertyChanging();
					this._CarrierID = value;
					this.SendPropertyChanged("CarrierID");
					this.OnCarrierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionID", DbType="Int")]
		public System.Nullable<int> ConditionID
		{
			get
			{
				return this._ConditionID;
			}
			set
			{
				if ((this._ConditionID != value))
				{
					if (this._BookingCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionIDChanging(value);
					this.SendPropertyChanging();
					this._ConditionID = value;
					this.SendPropertyChanged("ConditionID");
					this.OnConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCarrier_BookingService", Storage="_BookingCarrier", ThisKey="CarrierID", OtherKey="CarrierID", IsForeignKey=true)]
		public BookingCarrier BookingCarrier
		{
			get
			{
				return this._BookingCarrier.Entity;
			}
			set
			{
				BookingCarrier previousValue = this._BookingCarrier.Entity;
				if (((previousValue != value) 
							|| (this._BookingCarrier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCarrier.Entity = null;
						previousValue.BookingServices.Remove(this);
					}
					this._BookingCarrier.Entity = value;
					if ((value != null))
					{
						value.BookingServices.Add(this);
						this._CarrierID = value.CarrierID;
					}
					else
					{
						this._CarrierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookingCarrier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookingCondition_BookingService", Storage="_BookingCondition", ThisKey="ConditionID", OtherKey="BookingConditionID", IsForeignKey=true)]
		public BookingCondition BookingCondition
		{
			get
			{
				return this._BookingCondition.Entity;
			}
			set
			{
				BookingCondition previousValue = this._BookingCondition.Entity;
				if (((previousValue != value) 
							|| (this._BookingCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookingCondition.Entity = null;
						previousValue.BookingServices.Remove(this);
					}
					this._BookingCondition.Entity = value;
					if ((value != null))
					{
						value.BookingServices.Add(this);
						this._ConditionID = value.BookingConditionID;
					}
					else
					{
						this._ConditionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BookingCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetNextHawbResult
	{
		
		private string _seqNumber;
		
		public GetNextHawbResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seqNumber", DbType="VarChar(20)")]
		public string seqNumber
		{
			get
			{
				return this._seqNumber;
			}
			set
			{
				if ((this._seqNumber != value))
				{
					this._seqNumber = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
